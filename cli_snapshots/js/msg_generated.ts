// automatically generated by the FlatBuffers compiler, do not modify
import * as flatbuffers from "./third_party/flatbuffers/flatbuffers.ts";

/**
 * @enum
 */
export enum Any {
  NONE = 0,
  Accept = 1,
  ApplySourceMap = 2,
  Cache = 3,
  Chdir = 4,
  Chmod = 5,
  Chown = 6,
  Close = 7,
  CopyFile = 8,
  CreateWorker = 9,
  CreateWorkerRes = 10,
  Cwd = 11,
  CwdRes = 12,
  Dial = 13,
  Environ = 14,
  EnvironRes = 15,
  Exit = 16,
  Fetch = 17,
  FetchSourceFile = 18,
  FetchSourceFileRes = 19,
  FetchRes = 20,
  FormatError = 21,
  FormatErrorRes = 22,
  GetRandomValues = 23,
  GlobalTimer = 24,
  GlobalTimerRes = 25,
  GlobalTimerStop = 26,
  HostGetMessage = 27,
  HostGetMessageRes = 28,
  HostGetWorkerClosed = 29,
  HostPostMessage = 30,
  IsTTY = 31,
  IsTTYRes = 32,
  Kill = 33,
  Link = 34,
  Listen = 35,
  ListenRes = 36,
  MakeTempDir = 37,
  MakeTempDirRes = 38,
  Metrics = 39,
  MetricsRes = 40,
  Mkdir = 41,
  NewConn = 42,
  Now = 43,
  NowRes = 44,
  Open = 45,
  OpenRes = 46,
  PermissionRevoke = 47,
  Permissions = 48,
  PermissionsRes = 49,
  Read = 50,
  ReadDir = 51,
  ReadDirRes = 52,
  ReadRes = 53,
  Readlink = 54,
  ReadlinkRes = 55,
  Remove = 56,
  Rename = 57,
  ReplReadline = 58,
  ReplReadlineRes = 59,
  ReplStart = 60,
  ReplStartRes = 61,
  Resources = 62,
  ResourcesRes = 63,
  Run = 64,
  RunRes = 65,
  RunStatus = 66,
  RunStatusRes = 67,
  Seek = 68,
  SetEnv = 69,
  Shutdown = 70,
  Start = 71,
  StartRes = 72,
  Stat = 73,
  StatRes = 74,
  Symlink = 75,
  Truncate = 76,
  HomeDir = 77,
  HomeDirRes = 78,
  ExecPath = 79,
  ExecPathRes = 80,
  Utime = 81,
  WorkerGetMessage = 82,
  WorkerGetMessageRes = 83,
  WorkerPostMessage = 84,
  Write = 85,
  WriteRes = 86
}

/**
 * @enum
 */
export enum ErrorKind {
  NoError = 0,
  NotFound = 1,
  PermissionDenied = 2,
  ConnectionRefused = 3,
  ConnectionReset = 4,
  ConnectionAborted = 5,
  NotConnected = 6,
  AddrInUse = 7,
  AddrNotAvailable = 8,
  BrokenPipe = 9,
  AlreadyExists = 10,
  WouldBlock = 11,
  InvalidInput = 12,
  InvalidData = 13,
  TimedOut = 14,
  Interrupted = 15,
  WriteZero = 16,
  Other = 17,
  UnexpectedEof = 18,
  BadResource = 19,
  CommandFailed = 20,
  EmptyHost = 21,
  IdnaError = 22,
  InvalidPort = 23,
  InvalidIpv4Address = 24,
  InvalidIpv6Address = 25,
  InvalidDomainCharacter = 26,
  RelativeUrlWithoutBase = 27,
  RelativeUrlWithCannotBeABaseBase = 28,
  SetHostOnCannotBeABaseUrl = 29,
  Overflow = 30,
  HttpUser = 31,
  HttpClosed = 32,
  HttpCanceled = 33,
  HttpParse = 34,
  HttpOther = 35,
  TooLarge = 36,
  InvalidUri = 37,
  InvalidSeekMode = 38,
  OpNotAvailable = 39,
  WorkerInitFailed = 40,
  UnixError = 41,
  NoAsyncSupport = 42,
  NoSyncSupport = 43,
  ImportMapError = 44,
  InvalidPath = 45,
  ImportPrefixMissing = 46,
  UnsupportedFetchScheme = 47,
  TooManyRedirects = 48,
  Diagnostic = 49,
  JSError = 50
}

/**
 * @enum
 */
export enum MediaType {
  JavaScript = 0,
  TypeScript = 1,
  Json = 2,
  Unknown = 3
}

/**
 * @enum
 */
export enum ProcessStdio {
  Inherit = 0,
  Piped = 1,
  Null = 2
}

/**
 * @constructor
 */
export class Cwd {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Cwd
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Cwd {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Cwd= obj
   * @returns Cwd
   */
  static getRootAsCwd(bb: flatbuffers.ByteBuffer, obj?: Cwd): Cwd {
    return (obj || new Cwd()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startCwd(builder: flatbuffers.Builder) {
    builder.startObject(0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endCwd(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createCwd(builder: flatbuffers.Builder): flatbuffers.Offset {
    Cwd.startCwd(builder);
    return Cwd.endCwd(builder);
  }
}
/**
 * @constructor
 */
export class CwdRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns CwdRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): CwdRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param CwdRes= obj
   * @returns CwdRes
   */
  static getRootAsCwdRes(bb: flatbuffers.ByteBuffer, obj?: CwdRes): CwdRes {
    return (obj || new CwdRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  cwd(): string | null;
  cwd(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  cwd(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startCwdRes(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset cwdOffset
   */
  static addCwd(builder: flatbuffers.Builder, cwdOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, cwdOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endCwdRes(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createCwdRes(
    builder: flatbuffers.Builder,
    cwdOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    CwdRes.startCwdRes(builder);
    CwdRes.addCwd(builder, cwdOffset);
    return CwdRes.endCwdRes(builder);
  }
}
/**
 * @constructor
 */
export class Base {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Base
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Base {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Base= obj
   * @returns Base
   */
  static getRootAsBase(bb: flatbuffers.ByteBuffer, obj?: Base): Base {
    return (obj || new Base()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  cmdId(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_cmd_id(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns boolean
   */
  sync(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param boolean value
   * @returns boolean
   */
  mutate_sync(value: boolean): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, +value);
    return true;
  }

  /**
   * @returns ErrorKind
   */
  errorKind(): ErrorKind {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset
      ? /**  */ this.bb!.readInt8(this.bb_pos + offset)
      : ErrorKind.NoError;
  }

  /**
   * @param ErrorKind value
   * @returns boolean
   */
  mutate_error_kind(value: ErrorKind): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 8);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  error(): string | null;
  error(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  error(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 10);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @returns Any
   */
  innerType(): Any {
    var offset = this.bb!.__offset(this.bb_pos, 12);
    return offset ? /**  */ this.bb!.readUint8(this.bb_pos + offset) : Any.NONE;
  }

  /**
   * @param Any value
   * @returns boolean
   */
  mutate_inner_type(value: Any): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 12);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint8(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Table obj
   * @returns ?flatbuffers.Table
   */
  inner<T extends flatbuffers.Table>(obj: T): T | null {
    var offset = this.bb!.__offset(this.bb_pos, 14);
    return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startBase(builder: flatbuffers.Builder) {
    builder.startObject(6);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number cmdId
   */
  static addCmdId(builder: flatbuffers.Builder, cmdId: number) {
    builder.addFieldInt32(0, cmdId, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean sync
   */
  static addSync(builder: flatbuffers.Builder, sync: boolean) {
    builder.addFieldInt8(1, +sync, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param ErrorKind errorKind
   */
  static addErrorKind(builder: flatbuffers.Builder, errorKind: ErrorKind) {
    builder.addFieldInt8(2, errorKind, ErrorKind.NoError);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset errorOffset
   */
  static addError(
    builder: flatbuffers.Builder,
    errorOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(3, errorOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param Any innerType
   */
  static addInnerType(builder: flatbuffers.Builder, innerType: Any) {
    builder.addFieldInt8(4, innerType, Any.NONE);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset innerOffset
   */
  static addInner(
    builder: flatbuffers.Builder,
    innerOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(5, innerOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endBase(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset offset
   */
  static finishBaseBuffer(
    builder: flatbuffers.Builder,
    offset: flatbuffers.Offset
  ) {
    builder.finish(offset);
  }

  static createBase(
    builder: flatbuffers.Builder,
    cmdId: number,
    sync: boolean,
    errorKind: ErrorKind,
    errorOffset: flatbuffers.Offset,
    innerType: Any,
    innerOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    Base.startBase(builder);
    Base.addCmdId(builder, cmdId);
    Base.addSync(builder, sync);
    Base.addErrorKind(builder, errorKind);
    Base.addError(builder, errorOffset);
    Base.addInnerType(builder, innerType);
    Base.addInner(builder, innerOffset);
    return Base.endBase(builder);
  }
}
/**
 * @constructor
 */
export class Start {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Start
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Start {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Start= obj
   * @returns Start
   */
  static getRootAsStart(bb: flatbuffers.ByteBuffer, obj?: Start): Start {
    return (obj || new Start()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  unused(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readInt8(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_unused(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startStart(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number unused
   */
  static addUnused(builder: flatbuffers.Builder, unused: number) {
    builder.addFieldInt8(0, unused, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endStart(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createStart(
    builder: flatbuffers.Builder,
    unused: number
  ): flatbuffers.Offset {
    Start.startStart(builder);
    Start.addUnused(builder, unused);
    return Start.endStart(builder);
  }
}
/**
 * @constructor
 */
export class StartRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns StartRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): StartRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param StartRes= obj
   * @returns StartRes
   */
  static getRootAsStartRes(
    bb: flatbuffers.ByteBuffer,
    obj?: StartRes
  ): StartRes {
    return (obj || new StartRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  cwd(): string | null;
  cwd(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  cwd(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @returns number
   */
  pid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_pid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param number index
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array
   */
  argv(index: number): string;
  argv(
    index: number,
    optionalEncoding: flatbuffers.Encoding
  ): string | Uint8Array;
  argv(index: number, optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset
      ? this.bb!.__string(
          this.bb!.__vector(this.bb_pos + offset) + index * 4,
          optionalEncoding
        )
      : null;
  }

  /**
   * @returns number
   */
  argvLength(): number {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  mainModule(): string | null;
  mainModule(
    optionalEncoding: flatbuffers.Encoding
  ): string | Uint8Array | null;
  mainModule(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 10);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @returns boolean
   */
  debugFlag(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 12);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param boolean value
   * @returns boolean
   */
  mutate_debug_flag(value: boolean): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 12);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, +value);
    return true;
  }

  /**
   * @returns boolean
   */
  depsFlag(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 14);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param boolean value
   * @returns boolean
   */
  mutate_deps_flag(value: boolean): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 14);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, +value);
    return true;
  }

  /**
   * @returns boolean
   */
  typesFlag(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 16);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param boolean value
   * @returns boolean
   */
  mutate_types_flag(value: boolean): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 16);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, +value);
    return true;
  }

  /**
   * @returns boolean
   */
  versionFlag(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 18);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param boolean value
   * @returns boolean
   */
  mutate_version_flag(value: boolean): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 18);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, +value);
    return true;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  denoVersion(): string | null;
  denoVersion(
    optionalEncoding: flatbuffers.Encoding
  ): string | Uint8Array | null;
  denoVersion(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 20);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  v8Version(): string | null;
  v8Version(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  v8Version(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 22);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @returns boolean
   */
  noColor(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 24);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param boolean value
   * @returns boolean
   */
  mutate_no_color(value: boolean): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 24);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, +value);
    return true;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  xevalDelim(): string | null;
  xevalDelim(
    optionalEncoding: flatbuffers.Encoding
  ): string | Uint8Array | null;
  xevalDelim(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 26);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startStartRes(builder: flatbuffers.Builder) {
    builder.startObject(12);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset cwdOffset
   */
  static addCwd(builder: flatbuffers.Builder, cwdOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, cwdOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number pid
   */
  static addPid(builder: flatbuffers.Builder, pid: number) {
    builder.addFieldInt32(1, pid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset argvOffset
   */
  static addArgv(builder: flatbuffers.Builder, argvOffset: flatbuffers.Offset) {
    builder.addFieldOffset(2, argvOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param Array.<flatbuffers.Offset> data
   * @returns flatbuffers.Offset
   */
  static createArgvVector(
    builder: flatbuffers.Builder,
    data: flatbuffers.Offset[]
  ): flatbuffers.Offset {
    builder.startVector(4, data.length, 4);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addOffset(data[i]);
    }
    return builder.endVector();
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number numElems
   */
  static startArgvVector(builder: flatbuffers.Builder, numElems: number) {
    builder.startVector(4, numElems, 4);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset mainModuleOffset
   */
  static addMainModule(
    builder: flatbuffers.Builder,
    mainModuleOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(3, mainModuleOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean debugFlag
   */
  static addDebugFlag(builder: flatbuffers.Builder, debugFlag: boolean) {
    builder.addFieldInt8(4, +debugFlag, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean depsFlag
   */
  static addDepsFlag(builder: flatbuffers.Builder, depsFlag: boolean) {
    builder.addFieldInt8(5, +depsFlag, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean typesFlag
   */
  static addTypesFlag(builder: flatbuffers.Builder, typesFlag: boolean) {
    builder.addFieldInt8(6, +typesFlag, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean versionFlag
   */
  static addVersionFlag(builder: flatbuffers.Builder, versionFlag: boolean) {
    builder.addFieldInt8(7, +versionFlag, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset denoVersionOffset
   */
  static addDenoVersion(
    builder: flatbuffers.Builder,
    denoVersionOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(8, denoVersionOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset v8VersionOffset
   */
  static addV8Version(
    builder: flatbuffers.Builder,
    v8VersionOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(9, v8VersionOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean noColor
   */
  static addNoColor(builder: flatbuffers.Builder, noColor: boolean) {
    builder.addFieldInt8(10, +noColor, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset xevalDelimOffset
   */
  static addXevalDelim(
    builder: flatbuffers.Builder,
    xevalDelimOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(11, xevalDelimOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endStartRes(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createStartRes(
    builder: flatbuffers.Builder,
    cwdOffset: flatbuffers.Offset,
    pid: number,
    argvOffset: flatbuffers.Offset,
    mainModuleOffset: flatbuffers.Offset,
    debugFlag: boolean,
    depsFlag: boolean,
    typesFlag: boolean,
    versionFlag: boolean,
    denoVersionOffset: flatbuffers.Offset,
    v8VersionOffset: flatbuffers.Offset,
    noColor: boolean,
    xevalDelimOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    StartRes.startStartRes(builder);
    StartRes.addCwd(builder, cwdOffset);
    StartRes.addPid(builder, pid);
    StartRes.addArgv(builder, argvOffset);
    StartRes.addMainModule(builder, mainModuleOffset);
    StartRes.addDebugFlag(builder, debugFlag);
    StartRes.addDepsFlag(builder, depsFlag);
    StartRes.addTypesFlag(builder, typesFlag);
    StartRes.addVersionFlag(builder, versionFlag);
    StartRes.addDenoVersion(builder, denoVersionOffset);
    StartRes.addV8Version(builder, v8VersionOffset);
    StartRes.addNoColor(builder, noColor);
    StartRes.addXevalDelim(builder, xevalDelimOffset);
    return StartRes.endStartRes(builder);
  }
}
/**
 * @constructor
 */
export class FormatError {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns FormatError
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): FormatError {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param FormatError= obj
   * @returns FormatError
   */
  static getRootAsFormatError(
    bb: flatbuffers.ByteBuffer,
    obj?: FormatError
  ): FormatError {
    return (obj || new FormatError()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  error(): string | null;
  error(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  error(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startFormatError(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset errorOffset
   */
  static addError(
    builder: flatbuffers.Builder,
    errorOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, errorOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endFormatError(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createFormatError(
    builder: flatbuffers.Builder,
    errorOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    FormatError.startFormatError(builder);
    FormatError.addError(builder, errorOffset);
    return FormatError.endFormatError(builder);
  }
}
/**
 * @constructor
 */
export class FormatErrorRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns FormatErrorRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): FormatErrorRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param FormatErrorRes= obj
   * @returns FormatErrorRes
   */
  static getRootAsFormatErrorRes(
    bb: flatbuffers.ByteBuffer,
    obj?: FormatErrorRes
  ): FormatErrorRes {
    return (obj || new FormatErrorRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  error(): string | null;
  error(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  error(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startFormatErrorRes(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset errorOffset
   */
  static addError(
    builder: flatbuffers.Builder,
    errorOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, errorOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endFormatErrorRes(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createFormatErrorRes(
    builder: flatbuffers.Builder,
    errorOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    FormatErrorRes.startFormatErrorRes(builder);
    FormatErrorRes.addError(builder, errorOffset);
    return FormatErrorRes.endFormatErrorRes(builder);
  }
}
/**
 * @constructor
 */
export class CreateWorker {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns CreateWorker
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): CreateWorker {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param CreateWorker= obj
   * @returns CreateWorker
   */
  static getRootAsCreateWorker(
    bb: flatbuffers.ByteBuffer,
    obj?: CreateWorker
  ): CreateWorker {
    return (obj || new CreateWorker()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  specifier(): string | null;
  specifier(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  specifier(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @returns boolean
   */
  includeDenoNamespace(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param boolean value
   * @returns boolean
   */
  mutate_include_deno_namespace(value: boolean): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, +value);
    return true;
  }

  /**
   * @returns boolean
   */
  hasSourceCode(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param boolean value
   * @returns boolean
   */
  mutate_has_source_code(value: boolean): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 8);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, +value);
    return true;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  sourceCode(): string | null;
  sourceCode(
    optionalEncoding: flatbuffers.Encoding
  ): string | Uint8Array | null;
  sourceCode(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 10);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startCreateWorker(builder: flatbuffers.Builder) {
    builder.startObject(4);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset specifierOffset
   */
  static addSpecifier(
    builder: flatbuffers.Builder,
    specifierOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, specifierOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean includeDenoNamespace
   */
  static addIncludeDenoNamespace(
    builder: flatbuffers.Builder,
    includeDenoNamespace: boolean
  ) {
    builder.addFieldInt8(1, +includeDenoNamespace, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean hasSourceCode
   */
  static addHasSourceCode(
    builder: flatbuffers.Builder,
    hasSourceCode: boolean
  ) {
    builder.addFieldInt8(2, +hasSourceCode, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset sourceCodeOffset
   */
  static addSourceCode(
    builder: flatbuffers.Builder,
    sourceCodeOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(3, sourceCodeOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endCreateWorker(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createCreateWorker(
    builder: flatbuffers.Builder,
    specifierOffset: flatbuffers.Offset,
    includeDenoNamespace: boolean,
    hasSourceCode: boolean,
    sourceCodeOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    CreateWorker.startCreateWorker(builder);
    CreateWorker.addSpecifier(builder, specifierOffset);
    CreateWorker.addIncludeDenoNamespace(builder, includeDenoNamespace);
    CreateWorker.addHasSourceCode(builder, hasSourceCode);
    CreateWorker.addSourceCode(builder, sourceCodeOffset);
    return CreateWorker.endCreateWorker(builder);
  }
}
/**
 * @constructor
 */
export class CreateWorkerRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns CreateWorkerRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): CreateWorkerRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param CreateWorkerRes= obj
   * @returns CreateWorkerRes
   */
  static getRootAsCreateWorkerRes(
    bb: flatbuffers.ByteBuffer,
    obj?: CreateWorkerRes
  ): CreateWorkerRes {
    return (obj || new CreateWorkerRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  rid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_rid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startCreateWorkerRes(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number rid
   */
  static addRid(builder: flatbuffers.Builder, rid: number) {
    builder.addFieldInt32(0, rid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endCreateWorkerRes(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createCreateWorkerRes(
    builder: flatbuffers.Builder,
    rid: number
  ): flatbuffers.Offset {
    CreateWorkerRes.startCreateWorkerRes(builder);
    CreateWorkerRes.addRid(builder, rid);
    return CreateWorkerRes.endCreateWorkerRes(builder);
  }
}
/**
 * @constructor
 */
export class HostGetWorkerClosed {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns HostGetWorkerClosed
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): HostGetWorkerClosed {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param HostGetWorkerClosed= obj
   * @returns HostGetWorkerClosed
   */
  static getRootAsHostGetWorkerClosed(
    bb: flatbuffers.ByteBuffer,
    obj?: HostGetWorkerClosed
  ): HostGetWorkerClosed {
    return (obj || new HostGetWorkerClosed()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  rid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_rid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startHostGetWorkerClosed(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number rid
   */
  static addRid(builder: flatbuffers.Builder, rid: number) {
    builder.addFieldInt32(0, rid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endHostGetWorkerClosed(
    builder: flatbuffers.Builder
  ): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createHostGetWorkerClosed(
    builder: flatbuffers.Builder,
    rid: number
  ): flatbuffers.Offset {
    HostGetWorkerClosed.startHostGetWorkerClosed(builder);
    HostGetWorkerClosed.addRid(builder, rid);
    return HostGetWorkerClosed.endHostGetWorkerClosed(builder);
  }
}
/**
 * @constructor
 */
export class HostGetMessage {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns HostGetMessage
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): HostGetMessage {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param HostGetMessage= obj
   * @returns HostGetMessage
   */
  static getRootAsHostGetMessage(
    bb: flatbuffers.ByteBuffer,
    obj?: HostGetMessage
  ): HostGetMessage {
    return (obj || new HostGetMessage()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  rid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_rid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startHostGetMessage(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number rid
   */
  static addRid(builder: flatbuffers.Builder, rid: number) {
    builder.addFieldInt32(0, rid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endHostGetMessage(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createHostGetMessage(
    builder: flatbuffers.Builder,
    rid: number
  ): flatbuffers.Offset {
    HostGetMessage.startHostGetMessage(builder);
    HostGetMessage.addRid(builder, rid);
    return HostGetMessage.endHostGetMessage(builder);
  }
}
/**
 * @constructor
 */
export class HostGetMessageRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns HostGetMessageRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): HostGetMessageRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param HostGetMessageRes= obj
   * @returns HostGetMessageRes
   */
  static getRootAsHostGetMessageRes(
    bb: flatbuffers.ByteBuffer,
    obj?: HostGetMessageRes
  ): HostGetMessageRes {
    return (obj || new HostGetMessageRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param number index
   * @returns number
   */
  data(index: number): number | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index)
      : 0;
  }

  /**
   * @returns number
   */
  dataLength(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  /**
   * @returns Uint8Array
   */
  dataArray(): Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? new Uint8Array(
          this.bb!.bytes().buffer,
          this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),
          this.bb!.__vector_len(this.bb_pos + offset)
        )
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startHostGetMessageRes(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset dataOffset
   */
  static addData(builder: flatbuffers.Builder, dataOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, dataOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param Array.<number> data
   * @returns flatbuffers.Offset
   */
  static createDataVector(
    builder: flatbuffers.Builder,
    data: number[] | Uint8Array
  ): flatbuffers.Offset {
    builder.startVector(1, data.length, 1);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addInt8(data[i]);
    }
    return builder.endVector();
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number numElems
   */
  static startDataVector(builder: flatbuffers.Builder, numElems: number) {
    builder.startVector(1, numElems, 1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endHostGetMessageRes(
    builder: flatbuffers.Builder
  ): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createHostGetMessageRes(
    builder: flatbuffers.Builder,
    dataOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    HostGetMessageRes.startHostGetMessageRes(builder);
    HostGetMessageRes.addData(builder, dataOffset);
    return HostGetMessageRes.endHostGetMessageRes(builder);
  }
}
/**
 * @constructor
 */
export class HostPostMessage {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns HostPostMessage
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): HostPostMessage {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param HostPostMessage= obj
   * @returns HostPostMessage
   */
  static getRootAsHostPostMessage(
    bb: flatbuffers.ByteBuffer,
    obj?: HostPostMessage
  ): HostPostMessage {
    return (obj || new HostPostMessage()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  rid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_rid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startHostPostMessage(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number rid
   */
  static addRid(builder: flatbuffers.Builder, rid: number) {
    builder.addFieldInt32(0, rid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endHostPostMessage(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createHostPostMessage(
    builder: flatbuffers.Builder,
    rid: number
  ): flatbuffers.Offset {
    HostPostMessage.startHostPostMessage(builder);
    HostPostMessage.addRid(builder, rid);
    return HostPostMessage.endHostPostMessage(builder);
  }
}
/**
 * @constructor
 */
export class WorkerGetMessage {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns WorkerGetMessage
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): WorkerGetMessage {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param WorkerGetMessage= obj
   * @returns WorkerGetMessage
   */
  static getRootAsWorkerGetMessage(
    bb: flatbuffers.ByteBuffer,
    obj?: WorkerGetMessage
  ): WorkerGetMessage {
    return (obj || new WorkerGetMessage()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  unused(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readInt8(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_unused(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startWorkerGetMessage(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number unused
   */
  static addUnused(builder: flatbuffers.Builder, unused: number) {
    builder.addFieldInt8(0, unused, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endWorkerGetMessage(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createWorkerGetMessage(
    builder: flatbuffers.Builder,
    unused: number
  ): flatbuffers.Offset {
    WorkerGetMessage.startWorkerGetMessage(builder);
    WorkerGetMessage.addUnused(builder, unused);
    return WorkerGetMessage.endWorkerGetMessage(builder);
  }
}
/**
 * @constructor
 */
export class WorkerGetMessageRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns WorkerGetMessageRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): WorkerGetMessageRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param WorkerGetMessageRes= obj
   * @returns WorkerGetMessageRes
   */
  static getRootAsWorkerGetMessageRes(
    bb: flatbuffers.ByteBuffer,
    obj?: WorkerGetMessageRes
  ): WorkerGetMessageRes {
    return (obj || new WorkerGetMessageRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param number index
   * @returns number
   */
  data(index: number): number | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index)
      : 0;
  }

  /**
   * @returns number
   */
  dataLength(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  /**
   * @returns Uint8Array
   */
  dataArray(): Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? new Uint8Array(
          this.bb!.bytes().buffer,
          this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),
          this.bb!.__vector_len(this.bb_pos + offset)
        )
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startWorkerGetMessageRes(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset dataOffset
   */
  static addData(builder: flatbuffers.Builder, dataOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, dataOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param Array.<number> data
   * @returns flatbuffers.Offset
   */
  static createDataVector(
    builder: flatbuffers.Builder,
    data: number[] | Uint8Array
  ): flatbuffers.Offset {
    builder.startVector(1, data.length, 1);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addInt8(data[i]);
    }
    return builder.endVector();
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number numElems
   */
  static startDataVector(builder: flatbuffers.Builder, numElems: number) {
    builder.startVector(1, numElems, 1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endWorkerGetMessageRes(
    builder: flatbuffers.Builder
  ): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createWorkerGetMessageRes(
    builder: flatbuffers.Builder,
    dataOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    WorkerGetMessageRes.startWorkerGetMessageRes(builder);
    WorkerGetMessageRes.addData(builder, dataOffset);
    return WorkerGetMessageRes.endWorkerGetMessageRes(builder);
  }
}
/**
 * @constructor
 */
export class WorkerPostMessage {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns WorkerPostMessage
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): WorkerPostMessage {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param WorkerPostMessage= obj
   * @returns WorkerPostMessage
   */
  static getRootAsWorkerPostMessage(
    bb: flatbuffers.ByteBuffer,
    obj?: WorkerPostMessage
  ): WorkerPostMessage {
    return (obj || new WorkerPostMessage()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startWorkerPostMessage(builder: flatbuffers.Builder) {
    builder.startObject(0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endWorkerPostMessage(
    builder: flatbuffers.Builder
  ): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createWorkerPostMessage(
    builder: flatbuffers.Builder
  ): flatbuffers.Offset {
    WorkerPostMessage.startWorkerPostMessage(builder);
    return WorkerPostMessage.endWorkerPostMessage(builder);
  }
}
/**
 * @constructor
 */
export class FetchSourceFile {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns FetchSourceFile
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): FetchSourceFile {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param FetchSourceFile= obj
   * @returns FetchSourceFile
   */
  static getRootAsFetchSourceFile(
    bb: flatbuffers.ByteBuffer,
    obj?: FetchSourceFile
  ): FetchSourceFile {
    return (obj || new FetchSourceFile()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  specifier(): string | null;
  specifier(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  specifier(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  referrer(): string | null;
  referrer(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  referrer(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startFetchSourceFile(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset specifierOffset
   */
  static addSpecifier(
    builder: flatbuffers.Builder,
    specifierOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, specifierOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset referrerOffset
   */
  static addReferrer(
    builder: flatbuffers.Builder,
    referrerOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(1, referrerOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endFetchSourceFile(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createFetchSourceFile(
    builder: flatbuffers.Builder,
    specifierOffset: flatbuffers.Offset,
    referrerOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    FetchSourceFile.startFetchSourceFile(builder);
    FetchSourceFile.addSpecifier(builder, specifierOffset);
    FetchSourceFile.addReferrer(builder, referrerOffset);
    return FetchSourceFile.endFetchSourceFile(builder);
  }
}
/**
 * @constructor
 */
export class FetchSourceFileRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns FetchSourceFileRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): FetchSourceFileRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param FetchSourceFileRes= obj
   * @returns FetchSourceFileRes
   */
  static getRootAsFetchSourceFileRes(
    bb: flatbuffers.ByteBuffer,
    obj?: FetchSourceFileRes
  ): FetchSourceFileRes {
    return (obj || new FetchSourceFileRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  moduleName(): string | null;
  moduleName(
    optionalEncoding: flatbuffers.Encoding
  ): string | Uint8Array | null;
  moduleName(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  filename(): string | null;
  filename(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  filename(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @returns MediaType
   */
  mediaType(): MediaType {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset
      ? /**  */ this.bb!.readInt8(this.bb_pos + offset)
      : MediaType.JavaScript;
  }

  /**
   * @param MediaType value
   * @returns boolean
   */
  mutate_media_type(value: MediaType): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 8);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param number index
   * @returns number
   */
  data(index: number): number | null {
    var offset = this.bb!.__offset(this.bb_pos, 10);
    return offset
      ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index)
      : 0;
  }

  /**
   * @returns number
   */
  dataLength(): number {
    var offset = this.bb!.__offset(this.bb_pos, 10);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  /**
   * @returns Uint8Array
   */
  dataArray(): Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 10);
    return offset
      ? new Uint8Array(
          this.bb!.bytes().buffer,
          this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),
          this.bb!.__vector_len(this.bb_pos + offset)
        )
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startFetchSourceFileRes(builder: flatbuffers.Builder) {
    builder.startObject(4);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset moduleNameOffset
   */
  static addModuleName(
    builder: flatbuffers.Builder,
    moduleNameOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, moduleNameOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset filenameOffset
   */
  static addFilename(
    builder: flatbuffers.Builder,
    filenameOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(1, filenameOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param MediaType mediaType
   */
  static addMediaType(builder: flatbuffers.Builder, mediaType: MediaType) {
    builder.addFieldInt8(2, mediaType, MediaType.JavaScript);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset dataOffset
   */
  static addData(builder: flatbuffers.Builder, dataOffset: flatbuffers.Offset) {
    builder.addFieldOffset(3, dataOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param Array.<number> data
   * @returns flatbuffers.Offset
   */
  static createDataVector(
    builder: flatbuffers.Builder,
    data: number[] | Uint8Array
  ): flatbuffers.Offset {
    builder.startVector(1, data.length, 1);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addInt8(data[i]);
    }
    return builder.endVector();
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number numElems
   */
  static startDataVector(builder: flatbuffers.Builder, numElems: number) {
    builder.startVector(1, numElems, 1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endFetchSourceFileRes(
    builder: flatbuffers.Builder
  ): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createFetchSourceFileRes(
    builder: flatbuffers.Builder,
    moduleNameOffset: flatbuffers.Offset,
    filenameOffset: flatbuffers.Offset,
    mediaType: MediaType,
    dataOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    FetchSourceFileRes.startFetchSourceFileRes(builder);
    FetchSourceFileRes.addModuleName(builder, moduleNameOffset);
    FetchSourceFileRes.addFilename(builder, filenameOffset);
    FetchSourceFileRes.addMediaType(builder, mediaType);
    FetchSourceFileRes.addData(builder, dataOffset);
    return FetchSourceFileRes.endFetchSourceFileRes(builder);
  }
}
/**
 * @constructor
 */
export class ApplySourceMap {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns ApplySourceMap
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): ApplySourceMap {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param ApplySourceMap= obj
   * @returns ApplySourceMap
   */
  static getRootAsApplySourceMap(
    bb: flatbuffers.ByteBuffer,
    obj?: ApplySourceMap
  ): ApplySourceMap {
    return (obj || new ApplySourceMap()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  filename(): string | null;
  filename(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  filename(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @returns number
   */
  line(): number {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_line(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns number
   */
  column(): number {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_column(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 8);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startApplySourceMap(builder: flatbuffers.Builder) {
    builder.startObject(3);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset filenameOffset
   */
  static addFilename(
    builder: flatbuffers.Builder,
    filenameOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, filenameOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number line
   */
  static addLine(builder: flatbuffers.Builder, line: number) {
    builder.addFieldInt32(1, line, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number column
   */
  static addColumn(builder: flatbuffers.Builder, column: number) {
    builder.addFieldInt32(2, column, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endApplySourceMap(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createApplySourceMap(
    builder: flatbuffers.Builder,
    filenameOffset: flatbuffers.Offset,
    line: number,
    column: number
  ): flatbuffers.Offset {
    ApplySourceMap.startApplySourceMap(builder);
    ApplySourceMap.addFilename(builder, filenameOffset);
    ApplySourceMap.addLine(builder, line);
    ApplySourceMap.addColumn(builder, column);
    return ApplySourceMap.endApplySourceMap(builder);
  }
}
/**
 * @constructor
 */
export class Cache {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Cache
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Cache {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Cache= obj
   * @returns Cache
   */
  static getRootAsCache(bb: flatbuffers.ByteBuffer, obj?: Cache): Cache {
    return (obj || new Cache()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  extension(): string | null;
  extension(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  extension(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  moduleId(): string | null;
  moduleId(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  moduleId(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  contents(): string | null;
  contents(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  contents(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startCache(builder: flatbuffers.Builder) {
    builder.startObject(3);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset extensionOffset
   */
  static addExtension(
    builder: flatbuffers.Builder,
    extensionOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, extensionOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset moduleIdOffset
   */
  static addModuleId(
    builder: flatbuffers.Builder,
    moduleIdOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(1, moduleIdOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset contentsOffset
   */
  static addContents(
    builder: flatbuffers.Builder,
    contentsOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(2, contentsOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endCache(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createCache(
    builder: flatbuffers.Builder,
    extensionOffset: flatbuffers.Offset,
    moduleIdOffset: flatbuffers.Offset,
    contentsOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    Cache.startCache(builder);
    Cache.addExtension(builder, extensionOffset);
    Cache.addModuleId(builder, moduleIdOffset);
    Cache.addContents(builder, contentsOffset);
    return Cache.endCache(builder);
  }
}
/**
 * @constructor
 */
export class Chdir {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Chdir
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Chdir {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Chdir= obj
   * @returns Chdir
   */
  static getRootAsChdir(bb: flatbuffers.ByteBuffer, obj?: Chdir): Chdir {
    return (obj || new Chdir()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  directory(): string | null;
  directory(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  directory(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startChdir(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset directoryOffset
   */
  static addDirectory(
    builder: flatbuffers.Builder,
    directoryOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, directoryOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endChdir(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createChdir(
    builder: flatbuffers.Builder,
    directoryOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    Chdir.startChdir(builder);
    Chdir.addDirectory(builder, directoryOffset);
    return Chdir.endChdir(builder);
  }
}
/**
 * @constructor
 */
export class GlobalTimer {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns GlobalTimer
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): GlobalTimer {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param GlobalTimer= obj
   * @returns GlobalTimer
   */
  static getRootAsGlobalTimer(
    bb: flatbuffers.ByteBuffer,
    obj?: GlobalTimer
  ): GlobalTimer {
    return (obj || new GlobalTimer()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  timeout(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_timeout(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startGlobalTimer(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number timeout
   */
  static addTimeout(builder: flatbuffers.Builder, timeout: number) {
    builder.addFieldInt32(0, timeout, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endGlobalTimer(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createGlobalTimer(
    builder: flatbuffers.Builder,
    timeout: number
  ): flatbuffers.Offset {
    GlobalTimer.startGlobalTimer(builder);
    GlobalTimer.addTimeout(builder, timeout);
    return GlobalTimer.endGlobalTimer(builder);
  }
}
/**
 * @constructor
 */
export class GlobalTimerRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns GlobalTimerRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): GlobalTimerRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param GlobalTimerRes= obj
   * @returns GlobalTimerRes
   */
  static getRootAsGlobalTimerRes(
    bb: flatbuffers.ByteBuffer,
    obj?: GlobalTimerRes
  ): GlobalTimerRes {
    return (obj || new GlobalTimerRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startGlobalTimerRes(builder: flatbuffers.Builder) {
    builder.startObject(0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endGlobalTimerRes(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createGlobalTimerRes(
    builder: flatbuffers.Builder
  ): flatbuffers.Offset {
    GlobalTimerRes.startGlobalTimerRes(builder);
    return GlobalTimerRes.endGlobalTimerRes(builder);
  }
}
/**
 * @constructor
 */
export class GlobalTimerStop {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns GlobalTimerStop
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): GlobalTimerStop {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param GlobalTimerStop= obj
   * @returns GlobalTimerStop
   */
  static getRootAsGlobalTimerStop(
    bb: flatbuffers.ByteBuffer,
    obj?: GlobalTimerStop
  ): GlobalTimerStop {
    return (obj || new GlobalTimerStop()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startGlobalTimerStop(builder: flatbuffers.Builder) {
    builder.startObject(0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endGlobalTimerStop(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createGlobalTimerStop(
    builder: flatbuffers.Builder
  ): flatbuffers.Offset {
    GlobalTimerStop.startGlobalTimerStop(builder);
    return GlobalTimerStop.endGlobalTimerStop(builder);
  }
}
/**
 * @constructor
 */
export class Exit {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Exit
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Exit {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Exit= obj
   * @returns Exit
   */
  static getRootAsExit(bb: flatbuffers.ByteBuffer, obj?: Exit): Exit {
    return (obj || new Exit()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  code(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_code(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startExit(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number code
   */
  static addCode(builder: flatbuffers.Builder, code: number) {
    builder.addFieldInt32(0, code, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endExit(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createExit(
    builder: flatbuffers.Builder,
    code: number
  ): flatbuffers.Offset {
    Exit.startExit(builder);
    Exit.addCode(builder, code);
    return Exit.endExit(builder);
  }
}
/**
 * @constructor
 */
export class Environ {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Environ
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Environ {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Environ= obj
   * @returns Environ
   */
  static getRootAsEnviron(bb: flatbuffers.ByteBuffer, obj?: Environ): Environ {
    return (obj || new Environ()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startEnviron(builder: flatbuffers.Builder) {
    builder.startObject(0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endEnviron(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createEnviron(builder: flatbuffers.Builder): flatbuffers.Offset {
    Environ.startEnviron(builder);
    return Environ.endEnviron(builder);
  }
}
/**
 * @constructor
 */
export class SetEnv {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns SetEnv
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): SetEnv {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param SetEnv= obj
   * @returns SetEnv
   */
  static getRootAsSetEnv(bb: flatbuffers.ByteBuffer, obj?: SetEnv): SetEnv {
    return (obj || new SetEnv()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  key(): string | null;
  key(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  key(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  value(): string | null;
  value(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  value(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startSetEnv(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset keyOffset
   */
  static addKey(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, keyOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset valueOffset
   */
  static addValue(
    builder: flatbuffers.Builder,
    valueOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(1, valueOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endSetEnv(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createSetEnv(
    builder: flatbuffers.Builder,
    keyOffset: flatbuffers.Offset,
    valueOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    SetEnv.startSetEnv(builder);
    SetEnv.addKey(builder, keyOffset);
    SetEnv.addValue(builder, valueOffset);
    return SetEnv.endSetEnv(builder);
  }
}
/**
 * @constructor
 */
export class EnvironRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns EnvironRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): EnvironRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param EnvironRes= obj
   * @returns EnvironRes
   */
  static getRootAsEnvironRes(
    bb: flatbuffers.ByteBuffer,
    obj?: EnvironRes
  ): EnvironRes {
    return (obj || new EnvironRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param number index
   * @param KeyValue= obj
   * @returns KeyValue
   */
  map(index: number, obj?: KeyValue): KeyValue | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new KeyValue()).__init(
          this.bb!.__indirect(
            this.bb!.__vector(this.bb_pos + offset) + index * 4
          ),
          this.bb!
        )
      : null;
  }

  /**
   * @returns number
   */
  mapLength(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startEnvironRes(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset mapOffset
   */
  static addMap(builder: flatbuffers.Builder, mapOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, mapOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param Array.<flatbuffers.Offset> data
   * @returns flatbuffers.Offset
   */
  static createMapVector(
    builder: flatbuffers.Builder,
    data: flatbuffers.Offset[]
  ): flatbuffers.Offset {
    builder.startVector(4, data.length, 4);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addOffset(data[i]);
    }
    return builder.endVector();
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number numElems
   */
  static startMapVector(builder: flatbuffers.Builder, numElems: number) {
    builder.startVector(4, numElems, 4);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endEnvironRes(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createEnvironRes(
    builder: flatbuffers.Builder,
    mapOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    EnvironRes.startEnvironRes(builder);
    EnvironRes.addMap(builder, mapOffset);
    return EnvironRes.endEnvironRes(builder);
  }
}
/**
 * @constructor
 */
export class KeyValue {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns KeyValue
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): KeyValue {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param KeyValue= obj
   * @returns KeyValue
   */
  static getRootAsKeyValue(
    bb: flatbuffers.ByteBuffer,
    obj?: KeyValue
  ): KeyValue {
    return (obj || new KeyValue()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  key(): string | null;
  key(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  key(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  value(): string | null;
  value(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  value(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startKeyValue(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset keyOffset
   */
  static addKey(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, keyOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset valueOffset
   */
  static addValue(
    builder: flatbuffers.Builder,
    valueOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(1, valueOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endKeyValue(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createKeyValue(
    builder: flatbuffers.Builder,
    keyOffset: flatbuffers.Offset,
    valueOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    KeyValue.startKeyValue(builder);
    KeyValue.addKey(builder, keyOffset);
    KeyValue.addValue(builder, valueOffset);
    return KeyValue.endKeyValue(builder);
  }
}
/**
 * @constructor
 */
export class Permissions {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Permissions
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Permissions {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Permissions= obj
   * @returns Permissions
   */
  static getRootAsPermissions(
    bb: flatbuffers.ByteBuffer,
    obj?: Permissions
  ): Permissions {
    return (obj || new Permissions()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startPermissions(builder: flatbuffers.Builder) {
    builder.startObject(0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endPermissions(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createPermissions(builder: flatbuffers.Builder): flatbuffers.Offset {
    Permissions.startPermissions(builder);
    return Permissions.endPermissions(builder);
  }
}
/**
 * @constructor
 */
export class PermissionRevoke {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns PermissionRevoke
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): PermissionRevoke {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param PermissionRevoke= obj
   * @returns PermissionRevoke
   */
  static getRootAsPermissionRevoke(
    bb: flatbuffers.ByteBuffer,
    obj?: PermissionRevoke
  ): PermissionRevoke {
    return (obj || new PermissionRevoke()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  permission(): string | null;
  permission(
    optionalEncoding: flatbuffers.Encoding
  ): string | Uint8Array | null;
  permission(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startPermissionRevoke(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset permissionOffset
   */
  static addPermission(
    builder: flatbuffers.Builder,
    permissionOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, permissionOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endPermissionRevoke(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createPermissionRevoke(
    builder: flatbuffers.Builder,
    permissionOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    PermissionRevoke.startPermissionRevoke(builder);
    PermissionRevoke.addPermission(builder, permissionOffset);
    return PermissionRevoke.endPermissionRevoke(builder);
  }
}
/**
 * @constructor
 */
export class PermissionsRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns PermissionsRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): PermissionsRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param PermissionsRes= obj
   * @returns PermissionsRes
   */
  static getRootAsPermissionsRes(
    bb: flatbuffers.ByteBuffer,
    obj?: PermissionsRes
  ): PermissionsRes {
    return (obj || new PermissionsRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns boolean
   */
  run(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param boolean value
   * @returns boolean
   */
  mutate_run(value: boolean): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, +value);
    return true;
  }

  /**
   * @returns boolean
   */
  read(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param boolean value
   * @returns boolean
   */
  mutate_read(value: boolean): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, +value);
    return true;
  }

  /**
   * @returns boolean
   */
  write(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param boolean value
   * @returns boolean
   */
  mutate_write(value: boolean): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 8);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, +value);
    return true;
  }

  /**
   * @returns boolean
   */
  net(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 10);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param boolean value
   * @returns boolean
   */
  mutate_net(value: boolean): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 10);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, +value);
    return true;
  }

  /**
   * @returns boolean
   */
  env(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 12);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param boolean value
   * @returns boolean
   */
  mutate_env(value: boolean): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 12);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, +value);
    return true;
  }

  /**
   * @returns boolean
   */
  hrtime(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 14);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param boolean value
   * @returns boolean
   */
  mutate_hrtime(value: boolean): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 14);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, +value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startPermissionsRes(builder: flatbuffers.Builder) {
    builder.startObject(6);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean run
   */
  static addRun(builder: flatbuffers.Builder, run: boolean) {
    builder.addFieldInt8(0, +run, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean read
   */
  static addRead(builder: flatbuffers.Builder, read: boolean) {
    builder.addFieldInt8(1, +read, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean write
   */
  static addWrite(builder: flatbuffers.Builder, write: boolean) {
    builder.addFieldInt8(2, +write, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean net
   */
  static addNet(builder: flatbuffers.Builder, net: boolean) {
    builder.addFieldInt8(3, +net, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean env
   */
  static addEnv(builder: flatbuffers.Builder, env: boolean) {
    builder.addFieldInt8(4, +env, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean hrtime
   */
  static addHrtime(builder: flatbuffers.Builder, hrtime: boolean) {
    builder.addFieldInt8(5, +hrtime, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endPermissionsRes(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createPermissionsRes(
    builder: flatbuffers.Builder,
    run: boolean,
    read: boolean,
    write: boolean,
    net: boolean,
    env: boolean,
    hrtime: boolean
  ): flatbuffers.Offset {
    PermissionsRes.startPermissionsRes(builder);
    PermissionsRes.addRun(builder, run);
    PermissionsRes.addRead(builder, read);
    PermissionsRes.addWrite(builder, write);
    PermissionsRes.addNet(builder, net);
    PermissionsRes.addEnv(builder, env);
    PermissionsRes.addHrtime(builder, hrtime);
    return PermissionsRes.endPermissionsRes(builder);
  }
}
/**
 * @constructor
 */
export class HttpHeader {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns HttpHeader
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): HttpHeader {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param HttpHeader= obj
   * @returns HttpHeader
   */
  static getRootAsHttpHeader(
    bb: flatbuffers.ByteBuffer,
    obj?: HttpHeader
  ): HttpHeader {
    return (obj || new HttpHeader()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns boolean
   */
  isRequest(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param boolean value
   * @returns boolean
   */
  mutate_is_request(value: boolean): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, +value);
    return true;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  method(): string | null;
  method(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  method(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  url(): string | null;
  url(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  url(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @returns number
   */
  status(): number {
    var offset = this.bb!.__offset(this.bb_pos, 10);
    return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_status(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 10);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint16(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param number index
   * @param KeyValue= obj
   * @returns KeyValue
   */
  fields(index: number, obj?: KeyValue): KeyValue | null {
    var offset = this.bb!.__offset(this.bb_pos, 12);
    return offset
      ? (obj || new KeyValue()).__init(
          this.bb!.__indirect(
            this.bb!.__vector(this.bb_pos + offset) + index * 4
          ),
          this.bb!
        )
      : null;
  }

  /**
   * @returns number
   */
  fieldsLength(): number {
    var offset = this.bb!.__offset(this.bb_pos, 12);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startHttpHeader(builder: flatbuffers.Builder) {
    builder.startObject(5);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean isRequest
   */
  static addIsRequest(builder: flatbuffers.Builder, isRequest: boolean) {
    builder.addFieldInt8(0, +isRequest, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset methodOffset
   */
  static addMethod(
    builder: flatbuffers.Builder,
    methodOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(1, methodOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset urlOffset
   */
  static addUrl(builder: flatbuffers.Builder, urlOffset: flatbuffers.Offset) {
    builder.addFieldOffset(2, urlOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number status
   */
  static addStatus(builder: flatbuffers.Builder, status: number) {
    builder.addFieldInt16(3, status, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset fieldsOffset
   */
  static addFields(
    builder: flatbuffers.Builder,
    fieldsOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(4, fieldsOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param Array.<flatbuffers.Offset> data
   * @returns flatbuffers.Offset
   */
  static createFieldsVector(
    builder: flatbuffers.Builder,
    data: flatbuffers.Offset[]
  ): flatbuffers.Offset {
    builder.startVector(4, data.length, 4);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addOffset(data[i]);
    }
    return builder.endVector();
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number numElems
   */
  static startFieldsVector(builder: flatbuffers.Builder, numElems: number) {
    builder.startVector(4, numElems, 4);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endHttpHeader(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createHttpHeader(
    builder: flatbuffers.Builder,
    isRequest: boolean,
    methodOffset: flatbuffers.Offset,
    urlOffset: flatbuffers.Offset,
    status: number,
    fieldsOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    HttpHeader.startHttpHeader(builder);
    HttpHeader.addIsRequest(builder, isRequest);
    HttpHeader.addMethod(builder, methodOffset);
    HttpHeader.addUrl(builder, urlOffset);
    HttpHeader.addStatus(builder, status);
    HttpHeader.addFields(builder, fieldsOffset);
    return HttpHeader.endHttpHeader(builder);
  }
}
/**
 * @constructor
 */
export class Fetch {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Fetch
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Fetch {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Fetch= obj
   * @returns Fetch
   */
  static getRootAsFetch(bb: flatbuffers.ByteBuffer, obj?: Fetch): Fetch {
    return (obj || new Fetch()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param HttpHeader= obj
   * @returns HttpHeader|null
   */
  header(obj?: HttpHeader): HttpHeader | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new HttpHeader()).__init(
          this.bb!.__indirect(this.bb_pos + offset),
          this.bb!
        )
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startFetch(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset headerOffset
   */
  static addHeader(
    builder: flatbuffers.Builder,
    headerOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, headerOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endFetch(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createFetch(
    builder: flatbuffers.Builder,
    headerOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    Fetch.startFetch(builder);
    Fetch.addHeader(builder, headerOffset);
    return Fetch.endFetch(builder);
  }
}
/**
 * @constructor
 */
export class FetchRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns FetchRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): FetchRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param FetchRes= obj
   * @returns FetchRes
   */
  static getRootAsFetchRes(
    bb: flatbuffers.ByteBuffer,
    obj?: FetchRes
  ): FetchRes {
    return (obj || new FetchRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param HttpHeader= obj
   * @returns HttpHeader|null
   */
  header(obj?: HttpHeader): HttpHeader | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new HttpHeader()).__init(
          this.bb!.__indirect(this.bb_pos + offset),
          this.bb!
        )
      : null;
  }

  /**
   * @returns number
   */
  bodyRid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_body_rid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startFetchRes(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset headerOffset
   */
  static addHeader(
    builder: flatbuffers.Builder,
    headerOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, headerOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number bodyRid
   */
  static addBodyRid(builder: flatbuffers.Builder, bodyRid: number) {
    builder.addFieldInt32(1, bodyRid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endFetchRes(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createFetchRes(
    builder: flatbuffers.Builder,
    headerOffset: flatbuffers.Offset,
    bodyRid: number
  ): flatbuffers.Offset {
    FetchRes.startFetchRes(builder);
    FetchRes.addHeader(builder, headerOffset);
    FetchRes.addBodyRid(builder, bodyRid);
    return FetchRes.endFetchRes(builder);
  }
}
/**
 * @constructor
 */
export class MakeTempDir {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns MakeTempDir
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): MakeTempDir {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param MakeTempDir= obj
   * @returns MakeTempDir
   */
  static getRootAsMakeTempDir(
    bb: flatbuffers.ByteBuffer,
    obj?: MakeTempDir
  ): MakeTempDir {
    return (obj || new MakeTempDir()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  dir(): string | null;
  dir(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  dir(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  prefix(): string | null;
  prefix(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  prefix(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  suffix(): string | null;
  suffix(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  suffix(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startMakeTempDir(builder: flatbuffers.Builder) {
    builder.startObject(3);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset dirOffset
   */
  static addDir(builder: flatbuffers.Builder, dirOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, dirOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset prefixOffset
   */
  static addPrefix(
    builder: flatbuffers.Builder,
    prefixOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(1, prefixOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset suffixOffset
   */
  static addSuffix(
    builder: flatbuffers.Builder,
    suffixOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(2, suffixOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endMakeTempDir(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createMakeTempDir(
    builder: flatbuffers.Builder,
    dirOffset: flatbuffers.Offset,
    prefixOffset: flatbuffers.Offset,
    suffixOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    MakeTempDir.startMakeTempDir(builder);
    MakeTempDir.addDir(builder, dirOffset);
    MakeTempDir.addPrefix(builder, prefixOffset);
    MakeTempDir.addSuffix(builder, suffixOffset);
    return MakeTempDir.endMakeTempDir(builder);
  }
}
/**
 * @constructor
 */
export class MakeTempDirRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns MakeTempDirRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): MakeTempDirRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param MakeTempDirRes= obj
   * @returns MakeTempDirRes
   */
  static getRootAsMakeTempDirRes(
    bb: flatbuffers.ByteBuffer,
    obj?: MakeTempDirRes
  ): MakeTempDirRes {
    return (obj || new MakeTempDirRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  path(): string | null;
  path(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  path(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startMakeTempDirRes(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset pathOffset
   */
  static addPath(builder: flatbuffers.Builder, pathOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, pathOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endMakeTempDirRes(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createMakeTempDirRes(
    builder: flatbuffers.Builder,
    pathOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    MakeTempDirRes.startMakeTempDirRes(builder);
    MakeTempDirRes.addPath(builder, pathOffset);
    return MakeTempDirRes.endMakeTempDirRes(builder);
  }
}
/**
 * @constructor
 */
export class Mkdir {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Mkdir
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Mkdir {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Mkdir= obj
   * @returns Mkdir
   */
  static getRootAsMkdir(bb: flatbuffers.ByteBuffer, obj?: Mkdir): Mkdir {
    return (obj || new Mkdir()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  path(): string | null;
  path(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  path(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @returns boolean
   */
  recursive(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param boolean value
   * @returns boolean
   */
  mutate_recursive(value: boolean): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, +value);
    return true;
  }

  /**
   * @returns number
   */
  mode(): number {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_mode(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 8);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startMkdir(builder: flatbuffers.Builder) {
    builder.startObject(3);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset pathOffset
   */
  static addPath(builder: flatbuffers.Builder, pathOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, pathOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean recursive
   */
  static addRecursive(builder: flatbuffers.Builder, recursive: boolean) {
    builder.addFieldInt8(1, +recursive, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number mode
   */
  static addMode(builder: flatbuffers.Builder, mode: number) {
    builder.addFieldInt32(2, mode, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endMkdir(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createMkdir(
    builder: flatbuffers.Builder,
    pathOffset: flatbuffers.Offset,
    recursive: boolean,
    mode: number
  ): flatbuffers.Offset {
    Mkdir.startMkdir(builder);
    Mkdir.addPath(builder, pathOffset);
    Mkdir.addRecursive(builder, recursive);
    Mkdir.addMode(builder, mode);
    return Mkdir.endMkdir(builder);
  }
}
/**
 * @constructor
 */
export class Chmod {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Chmod
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Chmod {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Chmod= obj
   * @returns Chmod
   */
  static getRootAsChmod(bb: flatbuffers.ByteBuffer, obj?: Chmod): Chmod {
    return (obj || new Chmod()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  path(): string | null;
  path(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  path(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @returns number
   */
  mode(): number {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_mode(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startChmod(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset pathOffset
   */
  static addPath(builder: flatbuffers.Builder, pathOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, pathOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number mode
   */
  static addMode(builder: flatbuffers.Builder, mode: number) {
    builder.addFieldInt32(1, mode, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endChmod(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createChmod(
    builder: flatbuffers.Builder,
    pathOffset: flatbuffers.Offset,
    mode: number
  ): flatbuffers.Offset {
    Chmod.startChmod(builder);
    Chmod.addPath(builder, pathOffset);
    Chmod.addMode(builder, mode);
    return Chmod.endChmod(builder);
  }
}
/**
 * @constructor
 */
export class Chown {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Chown
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Chown {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Chown= obj
   * @returns Chown
   */
  static getRootAsChown(bb: flatbuffers.ByteBuffer, obj?: Chown): Chown {
    return (obj || new Chown()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  path(): string | null;
  path(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  path(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @returns number
   */
  uid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_uid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns number
   */
  gid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_gid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 8);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startChown(builder: flatbuffers.Builder) {
    builder.startObject(3);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset pathOffset
   */
  static addPath(builder: flatbuffers.Builder, pathOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, pathOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number uid
   */
  static addUid(builder: flatbuffers.Builder, uid: number) {
    builder.addFieldInt32(1, uid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number gid
   */
  static addGid(builder: flatbuffers.Builder, gid: number) {
    builder.addFieldInt32(2, gid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endChown(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createChown(
    builder: flatbuffers.Builder,
    pathOffset: flatbuffers.Offset,
    uid: number,
    gid: number
  ): flatbuffers.Offset {
    Chown.startChown(builder);
    Chown.addPath(builder, pathOffset);
    Chown.addUid(builder, uid);
    Chown.addGid(builder, gid);
    return Chown.endChown(builder);
  }
}
/**
 * @constructor
 */
export class Remove {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Remove
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Remove {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Remove= obj
   * @returns Remove
   */
  static getRootAsRemove(bb: flatbuffers.ByteBuffer, obj?: Remove): Remove {
    return (obj || new Remove()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  path(): string | null;
  path(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  path(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @returns boolean
   */
  recursive(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param boolean value
   * @returns boolean
   */
  mutate_recursive(value: boolean): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, +value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startRemove(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset pathOffset
   */
  static addPath(builder: flatbuffers.Builder, pathOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, pathOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean recursive
   */
  static addRecursive(builder: flatbuffers.Builder, recursive: boolean) {
    builder.addFieldInt8(1, +recursive, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endRemove(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createRemove(
    builder: flatbuffers.Builder,
    pathOffset: flatbuffers.Offset,
    recursive: boolean
  ): flatbuffers.Offset {
    Remove.startRemove(builder);
    Remove.addPath(builder, pathOffset);
    Remove.addRecursive(builder, recursive);
    return Remove.endRemove(builder);
  }
}
/**
 * @constructor
 */
export class ReadDir {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns ReadDir
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): ReadDir {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param ReadDir= obj
   * @returns ReadDir
   */
  static getRootAsReadDir(bb: flatbuffers.ByteBuffer, obj?: ReadDir): ReadDir {
    return (obj || new ReadDir()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  path(): string | null;
  path(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  path(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startReadDir(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset pathOffset
   */
  static addPath(builder: flatbuffers.Builder, pathOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, pathOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endReadDir(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createReadDir(
    builder: flatbuffers.Builder,
    pathOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    ReadDir.startReadDir(builder);
    ReadDir.addPath(builder, pathOffset);
    return ReadDir.endReadDir(builder);
  }
}
/**
 * @constructor
 */
export class ReadDirRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns ReadDirRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): ReadDirRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param ReadDirRes= obj
   * @returns ReadDirRes
   */
  static getRootAsReadDirRes(
    bb: flatbuffers.ByteBuffer,
    obj?: ReadDirRes
  ): ReadDirRes {
    return (obj || new ReadDirRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param number index
   * @param StatRes= obj
   * @returns StatRes
   */
  entries(index: number, obj?: StatRes): StatRes | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new StatRes()).__init(
          this.bb!.__indirect(
            this.bb!.__vector(this.bb_pos + offset) + index * 4
          ),
          this.bb!
        )
      : null;
  }

  /**
   * @returns number
   */
  entriesLength(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startReadDirRes(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset entriesOffset
   */
  static addEntries(
    builder: flatbuffers.Builder,
    entriesOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, entriesOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param Array.<flatbuffers.Offset> data
   * @returns flatbuffers.Offset
   */
  static createEntriesVector(
    builder: flatbuffers.Builder,
    data: flatbuffers.Offset[]
  ): flatbuffers.Offset {
    builder.startVector(4, data.length, 4);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addOffset(data[i]);
    }
    return builder.endVector();
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number numElems
   */
  static startEntriesVector(builder: flatbuffers.Builder, numElems: number) {
    builder.startVector(4, numElems, 4);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endReadDirRes(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createReadDirRes(
    builder: flatbuffers.Builder,
    entriesOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    ReadDirRes.startReadDirRes(builder);
    ReadDirRes.addEntries(builder, entriesOffset);
    return ReadDirRes.endReadDirRes(builder);
  }
}
/**
 * @constructor
 */
export class CopyFile {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns CopyFile
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): CopyFile {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param CopyFile= obj
   * @returns CopyFile
   */
  static getRootAsCopyFile(
    bb: flatbuffers.ByteBuffer,
    obj?: CopyFile
  ): CopyFile {
    return (obj || new CopyFile()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  from(): string | null;
  from(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  from(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  to(): string | null;
  to(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  to(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startCopyFile(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset fromOffset
   */
  static addFrom(builder: flatbuffers.Builder, fromOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, fromOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset toOffset
   */
  static addTo(builder: flatbuffers.Builder, toOffset: flatbuffers.Offset) {
    builder.addFieldOffset(1, toOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endCopyFile(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createCopyFile(
    builder: flatbuffers.Builder,
    fromOffset: flatbuffers.Offset,
    toOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    CopyFile.startCopyFile(builder);
    CopyFile.addFrom(builder, fromOffset);
    CopyFile.addTo(builder, toOffset);
    return CopyFile.endCopyFile(builder);
  }
}
/**
 * @constructor
 */
export class Rename {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Rename
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Rename {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Rename= obj
   * @returns Rename
   */
  static getRootAsRename(bb: flatbuffers.ByteBuffer, obj?: Rename): Rename {
    return (obj || new Rename()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  oldpath(): string | null;
  oldpath(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  oldpath(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  newpath(): string | null;
  newpath(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  newpath(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startRename(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset oldpathOffset
   */
  static addOldpath(
    builder: flatbuffers.Builder,
    oldpathOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, oldpathOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset newpathOffset
   */
  static addNewpath(
    builder: flatbuffers.Builder,
    newpathOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(1, newpathOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endRename(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createRename(
    builder: flatbuffers.Builder,
    oldpathOffset: flatbuffers.Offset,
    newpathOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    Rename.startRename(builder);
    Rename.addOldpath(builder, oldpathOffset);
    Rename.addNewpath(builder, newpathOffset);
    return Rename.endRename(builder);
  }
}
/**
 * @constructor
 */
export class Readlink {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Readlink
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Readlink {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Readlink= obj
   * @returns Readlink
   */
  static getRootAsReadlink(
    bb: flatbuffers.ByteBuffer,
    obj?: Readlink
  ): Readlink {
    return (obj || new Readlink()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  name(): string | null;
  name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  name(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startReadlink(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset nameOffset
   */
  static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, nameOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endReadlink(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createReadlink(
    builder: flatbuffers.Builder,
    nameOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    Readlink.startReadlink(builder);
    Readlink.addName(builder, nameOffset);
    return Readlink.endReadlink(builder);
  }
}
/**
 * @constructor
 */
export class ReadlinkRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns ReadlinkRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): ReadlinkRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param ReadlinkRes= obj
   * @returns ReadlinkRes
   */
  static getRootAsReadlinkRes(
    bb: flatbuffers.ByteBuffer,
    obj?: ReadlinkRes
  ): ReadlinkRes {
    return (obj || new ReadlinkRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  path(): string | null;
  path(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  path(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startReadlinkRes(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset pathOffset
   */
  static addPath(builder: flatbuffers.Builder, pathOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, pathOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endReadlinkRes(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createReadlinkRes(
    builder: flatbuffers.Builder,
    pathOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    ReadlinkRes.startReadlinkRes(builder);
    ReadlinkRes.addPath(builder, pathOffset);
    return ReadlinkRes.endReadlinkRes(builder);
  }
}
/**
 * @constructor
 */
export class ReplStart {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns ReplStart
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): ReplStart {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param ReplStart= obj
   * @returns ReplStart
   */
  static getRootAsReplStart(
    bb: flatbuffers.ByteBuffer,
    obj?: ReplStart
  ): ReplStart {
    return (obj || new ReplStart()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  historyFile(): string | null;
  historyFile(
    optionalEncoding: flatbuffers.Encoding
  ): string | Uint8Array | null;
  historyFile(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startReplStart(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset historyFileOffset
   */
  static addHistoryFile(
    builder: flatbuffers.Builder,
    historyFileOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, historyFileOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endReplStart(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createReplStart(
    builder: flatbuffers.Builder,
    historyFileOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    ReplStart.startReplStart(builder);
    ReplStart.addHistoryFile(builder, historyFileOffset);
    return ReplStart.endReplStart(builder);
  }
}
/**
 * @constructor
 */
export class ReplStartRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns ReplStartRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): ReplStartRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param ReplStartRes= obj
   * @returns ReplStartRes
   */
  static getRootAsReplStartRes(
    bb: flatbuffers.ByteBuffer,
    obj?: ReplStartRes
  ): ReplStartRes {
    return (obj || new ReplStartRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  rid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_rid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startReplStartRes(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number rid
   */
  static addRid(builder: flatbuffers.Builder, rid: number) {
    builder.addFieldInt32(0, rid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endReplStartRes(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createReplStartRes(
    builder: flatbuffers.Builder,
    rid: number
  ): flatbuffers.Offset {
    ReplStartRes.startReplStartRes(builder);
    ReplStartRes.addRid(builder, rid);
    return ReplStartRes.endReplStartRes(builder);
  }
}
/**
 * @constructor
 */
export class ReplReadline {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns ReplReadline
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): ReplReadline {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param ReplReadline= obj
   * @returns ReplReadline
   */
  static getRootAsReplReadline(
    bb: flatbuffers.ByteBuffer,
    obj?: ReplReadline
  ): ReplReadline {
    return (obj || new ReplReadline()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  rid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_rid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  prompt(): string | null;
  prompt(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  prompt(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startReplReadline(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number rid
   */
  static addRid(builder: flatbuffers.Builder, rid: number) {
    builder.addFieldInt32(0, rid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset promptOffset
   */
  static addPrompt(
    builder: flatbuffers.Builder,
    promptOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(1, promptOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endReplReadline(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createReplReadline(
    builder: flatbuffers.Builder,
    rid: number,
    promptOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    ReplReadline.startReplReadline(builder);
    ReplReadline.addRid(builder, rid);
    ReplReadline.addPrompt(builder, promptOffset);
    return ReplReadline.endReplReadline(builder);
  }
}
/**
 * @constructor
 */
export class ReplReadlineRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns ReplReadlineRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): ReplReadlineRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param ReplReadlineRes= obj
   * @returns ReplReadlineRes
   */
  static getRootAsReplReadlineRes(
    bb: flatbuffers.ByteBuffer,
    obj?: ReplReadlineRes
  ): ReplReadlineRes {
    return (obj || new ReplReadlineRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  line(): string | null;
  line(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  line(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startReplReadlineRes(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset lineOffset
   */
  static addLine(builder: flatbuffers.Builder, lineOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, lineOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endReplReadlineRes(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createReplReadlineRes(
    builder: flatbuffers.Builder,
    lineOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    ReplReadlineRes.startReplReadlineRes(builder);
    ReplReadlineRes.addLine(builder, lineOffset);
    return ReplReadlineRes.endReplReadlineRes(builder);
  }
}
/**
 * @constructor
 */
export class Resources {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Resources
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Resources {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Resources= obj
   * @returns Resources
   */
  static getRootAsResources(
    bb: flatbuffers.ByteBuffer,
    obj?: Resources
  ): Resources {
    return (obj || new Resources()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startResources(builder: flatbuffers.Builder) {
    builder.startObject(0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endResources(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createResources(builder: flatbuffers.Builder): flatbuffers.Offset {
    Resources.startResources(builder);
    return Resources.endResources(builder);
  }
}
/**
 * @constructor
 */
export class Resource {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Resource
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Resource {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Resource= obj
   * @returns Resource
   */
  static getRootAsResource(
    bb: flatbuffers.ByteBuffer,
    obj?: Resource
  ): Resource {
    return (obj || new Resource()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  rid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_rid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  repr(): string | null;
  repr(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  repr(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startResource(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number rid
   */
  static addRid(builder: flatbuffers.Builder, rid: number) {
    builder.addFieldInt32(0, rid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset reprOffset
   */
  static addRepr(builder: flatbuffers.Builder, reprOffset: flatbuffers.Offset) {
    builder.addFieldOffset(1, reprOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endResource(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createResource(
    builder: flatbuffers.Builder,
    rid: number,
    reprOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    Resource.startResource(builder);
    Resource.addRid(builder, rid);
    Resource.addRepr(builder, reprOffset);
    return Resource.endResource(builder);
  }
}
/**
 * @constructor
 */
export class ResourcesRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns ResourcesRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): ResourcesRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param ResourcesRes= obj
   * @returns ResourcesRes
   */
  static getRootAsResourcesRes(
    bb: flatbuffers.ByteBuffer,
    obj?: ResourcesRes
  ): ResourcesRes {
    return (obj || new ResourcesRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param number index
   * @param Resource= obj
   * @returns Resource
   */
  resources(index: number, obj?: Resource): Resource | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new Resource()).__init(
          this.bb!.__indirect(
            this.bb!.__vector(this.bb_pos + offset) + index * 4
          ),
          this.bb!
        )
      : null;
  }

  /**
   * @returns number
   */
  resourcesLength(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startResourcesRes(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset resourcesOffset
   */
  static addResources(
    builder: flatbuffers.Builder,
    resourcesOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, resourcesOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param Array.<flatbuffers.Offset> data
   * @returns flatbuffers.Offset
   */
  static createResourcesVector(
    builder: flatbuffers.Builder,
    data: flatbuffers.Offset[]
  ): flatbuffers.Offset {
    builder.startVector(4, data.length, 4);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addOffset(data[i]);
    }
    return builder.endVector();
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number numElems
   */
  static startResourcesVector(builder: flatbuffers.Builder, numElems: number) {
    builder.startVector(4, numElems, 4);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endResourcesRes(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createResourcesRes(
    builder: flatbuffers.Builder,
    resourcesOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    ResourcesRes.startResourcesRes(builder);
    ResourcesRes.addResources(builder, resourcesOffset);
    return ResourcesRes.endResourcesRes(builder);
  }
}
/**
 * @constructor
 */
export class Symlink {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Symlink
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Symlink {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Symlink= obj
   * @returns Symlink
   */
  static getRootAsSymlink(bb: flatbuffers.ByteBuffer, obj?: Symlink): Symlink {
    return (obj || new Symlink()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  oldname(): string | null;
  oldname(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  oldname(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  newname(): string | null;
  newname(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  newname(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startSymlink(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset oldnameOffset
   */
  static addOldname(
    builder: flatbuffers.Builder,
    oldnameOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, oldnameOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset newnameOffset
   */
  static addNewname(
    builder: flatbuffers.Builder,
    newnameOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(1, newnameOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endSymlink(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createSymlink(
    builder: flatbuffers.Builder,
    oldnameOffset: flatbuffers.Offset,
    newnameOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    Symlink.startSymlink(builder);
    Symlink.addOldname(builder, oldnameOffset);
    Symlink.addNewname(builder, newnameOffset);
    return Symlink.endSymlink(builder);
  }
}
/**
 * @constructor
 */
export class Link {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Link
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Link {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Link= obj
   * @returns Link
   */
  static getRootAsLink(bb: flatbuffers.ByteBuffer, obj?: Link): Link {
    return (obj || new Link()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  oldname(): string | null;
  oldname(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  oldname(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  newname(): string | null;
  newname(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  newname(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startLink(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset oldnameOffset
   */
  static addOldname(
    builder: flatbuffers.Builder,
    oldnameOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, oldnameOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset newnameOffset
   */
  static addNewname(
    builder: flatbuffers.Builder,
    newnameOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(1, newnameOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endLink(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createLink(
    builder: flatbuffers.Builder,
    oldnameOffset: flatbuffers.Offset,
    newnameOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    Link.startLink(builder);
    Link.addOldname(builder, oldnameOffset);
    Link.addNewname(builder, newnameOffset);
    return Link.endLink(builder);
  }
}
/**
 * @constructor
 */
export class Stat {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Stat
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Stat {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Stat= obj
   * @returns Stat
   */
  static getRootAsStat(bb: flatbuffers.ByteBuffer, obj?: Stat): Stat {
    return (obj || new Stat()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  filename(): string | null;
  filename(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  filename(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @returns boolean
   */
  lstat(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param boolean value
   * @returns boolean
   */
  mutate_lstat(value: boolean): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, +value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startStat(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset filenameOffset
   */
  static addFilename(
    builder: flatbuffers.Builder,
    filenameOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, filenameOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean lstat
   */
  static addLstat(builder: flatbuffers.Builder, lstat: boolean) {
    builder.addFieldInt8(1, +lstat, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endStat(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createStat(
    builder: flatbuffers.Builder,
    filenameOffset: flatbuffers.Offset,
    lstat: boolean
  ): flatbuffers.Offset {
    Stat.startStat(builder);
    Stat.addFilename(builder, filenameOffset);
    Stat.addLstat(builder, lstat);
    return Stat.endStat(builder);
  }
}
/**
 * @constructor
 */
export class StatRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns StatRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): StatRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param StatRes= obj
   * @returns StatRes
   */
  static getRootAsStatRes(bb: flatbuffers.ByteBuffer, obj?: StatRes): StatRes {
    return (obj || new StatRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns boolean
   */
  isFile(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param boolean value
   * @returns boolean
   */
  mutate_is_file(value: boolean): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, +value);
    return true;
  }

  /**
   * @returns boolean
   */
  isSymlink(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param boolean value
   * @returns boolean
   */
  mutate_is_symlink(value: boolean): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, +value);
    return true;
  }

  /**
   * @returns flatbuffers.Long
   */
  len(): flatbuffers.Long {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset
      ? this.bb!.readUint64(this.bb_pos + offset)
      : this.bb!.createLong(0, 0);
  }

  /**
   * @param flatbuffers.Long value
   * @returns boolean
   */
  mutate_len(value: flatbuffers.Long): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 8);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint64(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns flatbuffers.Long
   */
  modified(): flatbuffers.Long {
    var offset = this.bb!.__offset(this.bb_pos, 10);
    return offset
      ? this.bb!.readUint64(this.bb_pos + offset)
      : this.bb!.createLong(0, 0);
  }

  /**
   * @param flatbuffers.Long value
   * @returns boolean
   */
  mutate_modified(value: flatbuffers.Long): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 10);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint64(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns flatbuffers.Long
   */
  accessed(): flatbuffers.Long {
    var offset = this.bb!.__offset(this.bb_pos, 12);
    return offset
      ? this.bb!.readUint64(this.bb_pos + offset)
      : this.bb!.createLong(0, 0);
  }

  /**
   * @param flatbuffers.Long value
   * @returns boolean
   */
  mutate_accessed(value: flatbuffers.Long): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 12);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint64(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns flatbuffers.Long
   */
  created(): flatbuffers.Long {
    var offset = this.bb!.__offset(this.bb_pos, 14);
    return offset
      ? this.bb!.readUint64(this.bb_pos + offset)
      : this.bb!.createLong(0, 0);
  }

  /**
   * @param flatbuffers.Long value
   * @returns boolean
   */
  mutate_created(value: flatbuffers.Long): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 14);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint64(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns number
   */
  mode(): number {
    var offset = this.bb!.__offset(this.bb_pos, 16);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_mode(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 16);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns boolean
   */
  hasMode(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 18);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param boolean value
   * @returns boolean
   */
  mutate_has_mode(value: boolean): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 18);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, +value);
    return true;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  name(): string | null;
  name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  name(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 20);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startStatRes(builder: flatbuffers.Builder) {
    builder.startObject(9);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean isFile
   */
  static addIsFile(builder: flatbuffers.Builder, isFile: boolean) {
    builder.addFieldInt8(0, +isFile, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean isSymlink
   */
  static addIsSymlink(builder: flatbuffers.Builder, isSymlink: boolean) {
    builder.addFieldInt8(1, +isSymlink, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Long len
   */
  static addLen(builder: flatbuffers.Builder, len: flatbuffers.Long) {
    builder.addFieldInt64(2, len, builder.createLong(0, 0));
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Long modified
   */
  static addModified(builder: flatbuffers.Builder, modified: flatbuffers.Long) {
    builder.addFieldInt64(3, modified, builder.createLong(0, 0));
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Long accessed
   */
  static addAccessed(builder: flatbuffers.Builder, accessed: flatbuffers.Long) {
    builder.addFieldInt64(4, accessed, builder.createLong(0, 0));
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Long created
   */
  static addCreated(builder: flatbuffers.Builder, created: flatbuffers.Long) {
    builder.addFieldInt64(5, created, builder.createLong(0, 0));
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number mode
   */
  static addMode(builder: flatbuffers.Builder, mode: number) {
    builder.addFieldInt32(6, mode, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean hasMode
   */
  static addHasMode(builder: flatbuffers.Builder, hasMode: boolean) {
    builder.addFieldInt8(7, +hasMode, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset nameOffset
   */
  static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {
    builder.addFieldOffset(8, nameOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endStatRes(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createStatRes(
    builder: flatbuffers.Builder,
    isFile: boolean,
    isSymlink: boolean,
    len: flatbuffers.Long,
    modified: flatbuffers.Long,
    accessed: flatbuffers.Long,
    created: flatbuffers.Long,
    mode: number,
    hasMode: boolean,
    nameOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    StatRes.startStatRes(builder);
    StatRes.addIsFile(builder, isFile);
    StatRes.addIsSymlink(builder, isSymlink);
    StatRes.addLen(builder, len);
    StatRes.addModified(builder, modified);
    StatRes.addAccessed(builder, accessed);
    StatRes.addCreated(builder, created);
    StatRes.addMode(builder, mode);
    StatRes.addHasMode(builder, hasMode);
    StatRes.addName(builder, nameOffset);
    return StatRes.endStatRes(builder);
  }
}
/**
 * @constructor
 */
export class Truncate {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Truncate
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Truncate {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Truncate= obj
   * @returns Truncate
   */
  static getRootAsTruncate(
    bb: flatbuffers.ByteBuffer,
    obj?: Truncate
  ): Truncate {
    return (obj || new Truncate()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  name(): string | null;
  name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  name(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @returns number
   */
  len(): number {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_len(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startTruncate(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset nameOffset
   */
  static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, nameOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number len
   */
  static addLen(builder: flatbuffers.Builder, len: number) {
    builder.addFieldInt32(1, len, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endTruncate(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createTruncate(
    builder: flatbuffers.Builder,
    nameOffset: flatbuffers.Offset,
    len: number
  ): flatbuffers.Offset {
    Truncate.startTruncate(builder);
    Truncate.addName(builder, nameOffset);
    Truncate.addLen(builder, len);
    return Truncate.endTruncate(builder);
  }
}
/**
 * @constructor
 */
export class HomeDir {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns HomeDir
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): HomeDir {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param HomeDir= obj
   * @returns HomeDir
   */
  static getRootAsHomeDir(bb: flatbuffers.ByteBuffer, obj?: HomeDir): HomeDir {
    return (obj || new HomeDir()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startHomeDir(builder: flatbuffers.Builder) {
    builder.startObject(0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endHomeDir(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createHomeDir(builder: flatbuffers.Builder): flatbuffers.Offset {
    HomeDir.startHomeDir(builder);
    return HomeDir.endHomeDir(builder);
  }
}
/**
 * @constructor
 */
export class HomeDirRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns HomeDirRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): HomeDirRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param HomeDirRes= obj
   * @returns HomeDirRes
   */
  static getRootAsHomeDirRes(
    bb: flatbuffers.ByteBuffer,
    obj?: HomeDirRes
  ): HomeDirRes {
    return (obj || new HomeDirRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  path(): string | null;
  path(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  path(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startHomeDirRes(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset pathOffset
   */
  static addPath(builder: flatbuffers.Builder, pathOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, pathOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endHomeDirRes(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createHomeDirRes(
    builder: flatbuffers.Builder,
    pathOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    HomeDirRes.startHomeDirRes(builder);
    HomeDirRes.addPath(builder, pathOffset);
    return HomeDirRes.endHomeDirRes(builder);
  }
}
/**
 * @constructor
 */
export class ExecPath {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns ExecPath
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): ExecPath {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param ExecPath= obj
   * @returns ExecPath
   */
  static getRootAsExecPath(
    bb: flatbuffers.ByteBuffer,
    obj?: ExecPath
  ): ExecPath {
    return (obj || new ExecPath()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startExecPath(builder: flatbuffers.Builder) {
    builder.startObject(0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endExecPath(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createExecPath(builder: flatbuffers.Builder): flatbuffers.Offset {
    ExecPath.startExecPath(builder);
    return ExecPath.endExecPath(builder);
  }
}
/**
 * @constructor
 */
export class ExecPathRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns ExecPathRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): ExecPathRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param ExecPathRes= obj
   * @returns ExecPathRes
   */
  static getRootAsExecPathRes(
    bb: flatbuffers.ByteBuffer,
    obj?: ExecPathRes
  ): ExecPathRes {
    return (obj || new ExecPathRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  path(): string | null;
  path(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  path(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startExecPathRes(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset pathOffset
   */
  static addPath(builder: flatbuffers.Builder, pathOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, pathOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endExecPathRes(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createExecPathRes(
    builder: flatbuffers.Builder,
    pathOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    ExecPathRes.startExecPathRes(builder);
    ExecPathRes.addPath(builder, pathOffset);
    return ExecPathRes.endExecPathRes(builder);
  }
}
/**
 * @constructor
 */
export class Utime {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Utime
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Utime {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Utime= obj
   * @returns Utime
   */
  static getRootAsUtime(bb: flatbuffers.ByteBuffer, obj?: Utime): Utime {
    return (obj || new Utime()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  filename(): string | null;
  filename(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  filename(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @returns flatbuffers.Long
   */
  atime(): flatbuffers.Long {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? this.bb!.readUint64(this.bb_pos + offset)
      : this.bb!.createLong(0, 0);
  }

  /**
   * @param flatbuffers.Long value
   * @returns boolean
   */
  mutate_atime(value: flatbuffers.Long): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint64(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns flatbuffers.Long
   */
  mtime(): flatbuffers.Long {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset
      ? this.bb!.readUint64(this.bb_pos + offset)
      : this.bb!.createLong(0, 0);
  }

  /**
   * @param flatbuffers.Long value
   * @returns boolean
   */
  mutate_mtime(value: flatbuffers.Long): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 8);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint64(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startUtime(builder: flatbuffers.Builder) {
    builder.startObject(3);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset filenameOffset
   */
  static addFilename(
    builder: flatbuffers.Builder,
    filenameOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, filenameOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Long atime
   */
  static addAtime(builder: flatbuffers.Builder, atime: flatbuffers.Long) {
    builder.addFieldInt64(1, atime, builder.createLong(0, 0));
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Long mtime
   */
  static addMtime(builder: flatbuffers.Builder, mtime: flatbuffers.Long) {
    builder.addFieldInt64(2, mtime, builder.createLong(0, 0));
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endUtime(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createUtime(
    builder: flatbuffers.Builder,
    filenameOffset: flatbuffers.Offset,
    atime: flatbuffers.Long,
    mtime: flatbuffers.Long
  ): flatbuffers.Offset {
    Utime.startUtime(builder);
    Utime.addFilename(builder, filenameOffset);
    Utime.addAtime(builder, atime);
    Utime.addMtime(builder, mtime);
    return Utime.endUtime(builder);
  }
}
/**
 * @constructor
 */
export class Open {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Open
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Open {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Open= obj
   * @returns Open
   */
  static getRootAsOpen(bb: flatbuffers.ByteBuffer, obj?: Open): Open {
    return (obj || new Open()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  filename(): string | null;
  filename(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  filename(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @returns number
   */
  perm(): number {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_perm(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  mode(): string | null;
  mode(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  mode(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startOpen(builder: flatbuffers.Builder) {
    builder.startObject(3);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset filenameOffset
   */
  static addFilename(
    builder: flatbuffers.Builder,
    filenameOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, filenameOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number perm
   */
  static addPerm(builder: flatbuffers.Builder, perm: number) {
    builder.addFieldInt32(1, perm, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset modeOffset
   */
  static addMode(builder: flatbuffers.Builder, modeOffset: flatbuffers.Offset) {
    builder.addFieldOffset(2, modeOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endOpen(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createOpen(
    builder: flatbuffers.Builder,
    filenameOffset: flatbuffers.Offset,
    perm: number,
    modeOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    Open.startOpen(builder);
    Open.addFilename(builder, filenameOffset);
    Open.addPerm(builder, perm);
    Open.addMode(builder, modeOffset);
    return Open.endOpen(builder);
  }
}
/**
 * @constructor
 */
export class OpenRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns OpenRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): OpenRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param OpenRes= obj
   * @returns OpenRes
   */
  static getRootAsOpenRes(bb: flatbuffers.ByteBuffer, obj?: OpenRes): OpenRes {
    return (obj || new OpenRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  rid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_rid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startOpenRes(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number rid
   */
  static addRid(builder: flatbuffers.Builder, rid: number) {
    builder.addFieldInt32(0, rid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endOpenRes(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createOpenRes(
    builder: flatbuffers.Builder,
    rid: number
  ): flatbuffers.Offset {
    OpenRes.startOpenRes(builder);
    OpenRes.addRid(builder, rid);
    return OpenRes.endOpenRes(builder);
  }
}
/**
 * @constructor
 */
export class Read {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Read
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Read {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Read= obj
   * @returns Read
   */
  static getRootAsRead(bb: flatbuffers.ByteBuffer, obj?: Read): Read {
    return (obj || new Read()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  rid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_rid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startRead(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number rid
   */
  static addRid(builder: flatbuffers.Builder, rid: number) {
    builder.addFieldInt32(0, rid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endRead(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createRead(
    builder: flatbuffers.Builder,
    rid: number
  ): flatbuffers.Offset {
    Read.startRead(builder);
    Read.addRid(builder, rid);
    return Read.endRead(builder);
  }
}
/**
 * @constructor
 */
export class ReadRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns ReadRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): ReadRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param ReadRes= obj
   * @returns ReadRes
   */
  static getRootAsReadRes(bb: flatbuffers.ByteBuffer, obj?: ReadRes): ReadRes {
    return (obj || new ReadRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  nread(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_nread(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns boolean
   */
  eof(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param boolean value
   * @returns boolean
   */
  mutate_eof(value: boolean): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, +value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startReadRes(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number nread
   */
  static addNread(builder: flatbuffers.Builder, nread: number) {
    builder.addFieldInt32(0, nread, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean eof
   */
  static addEof(builder: flatbuffers.Builder, eof: boolean) {
    builder.addFieldInt8(1, +eof, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endReadRes(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createReadRes(
    builder: flatbuffers.Builder,
    nread: number,
    eof: boolean
  ): flatbuffers.Offset {
    ReadRes.startReadRes(builder);
    ReadRes.addNread(builder, nread);
    ReadRes.addEof(builder, eof);
    return ReadRes.endReadRes(builder);
  }
}
/**
 * @constructor
 */
export class Write {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Write
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Write {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Write= obj
   * @returns Write
   */
  static getRootAsWrite(bb: flatbuffers.ByteBuffer, obj?: Write): Write {
    return (obj || new Write()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  rid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_rid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startWrite(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number rid
   */
  static addRid(builder: flatbuffers.Builder, rid: number) {
    builder.addFieldInt32(0, rid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endWrite(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createWrite(
    builder: flatbuffers.Builder,
    rid: number
  ): flatbuffers.Offset {
    Write.startWrite(builder);
    Write.addRid(builder, rid);
    return Write.endWrite(builder);
  }
}
/**
 * @constructor
 */
export class WriteRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns WriteRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): WriteRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param WriteRes= obj
   * @returns WriteRes
   */
  static getRootAsWriteRes(
    bb: flatbuffers.ByteBuffer,
    obj?: WriteRes
  ): WriteRes {
    return (obj || new WriteRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  nbyte(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_nbyte(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startWriteRes(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number nbyte
   */
  static addNbyte(builder: flatbuffers.Builder, nbyte: number) {
    builder.addFieldInt32(0, nbyte, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endWriteRes(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createWriteRes(
    builder: flatbuffers.Builder,
    nbyte: number
  ): flatbuffers.Offset {
    WriteRes.startWriteRes(builder);
    WriteRes.addNbyte(builder, nbyte);
    return WriteRes.endWriteRes(builder);
  }
}
/**
 * @constructor
 */
export class Close {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Close
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Close {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Close= obj
   * @returns Close
   */
  static getRootAsClose(bb: flatbuffers.ByteBuffer, obj?: Close): Close {
    return (obj || new Close()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  rid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_rid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startClose(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number rid
   */
  static addRid(builder: flatbuffers.Builder, rid: number) {
    builder.addFieldInt32(0, rid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endClose(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createClose(
    builder: flatbuffers.Builder,
    rid: number
  ): flatbuffers.Offset {
    Close.startClose(builder);
    Close.addRid(builder, rid);
    return Close.endClose(builder);
  }
}
/**
 * @constructor
 */
export class Kill {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Kill
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Kill {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Kill= obj
   * @returns Kill
   */
  static getRootAsKill(bb: flatbuffers.ByteBuffer, obj?: Kill): Kill {
    return (obj || new Kill()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  pid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_pid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns number
   */
  signo(): number {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_signo(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startKill(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number pid
   */
  static addPid(builder: flatbuffers.Builder, pid: number) {
    builder.addFieldInt32(0, pid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number signo
   */
  static addSigno(builder: flatbuffers.Builder, signo: number) {
    builder.addFieldInt32(1, signo, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endKill(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createKill(
    builder: flatbuffers.Builder,
    pid: number,
    signo: number
  ): flatbuffers.Offset {
    Kill.startKill(builder);
    Kill.addPid(builder, pid);
    Kill.addSigno(builder, signo);
    return Kill.endKill(builder);
  }
}
/**
 * @constructor
 */
export class Shutdown {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Shutdown
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Shutdown {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Shutdown= obj
   * @returns Shutdown
   */
  static getRootAsShutdown(
    bb: flatbuffers.ByteBuffer,
    obj?: Shutdown
  ): Shutdown {
    return (obj || new Shutdown()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  rid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_rid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns number
   */
  how(): number {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_how(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startShutdown(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number rid
   */
  static addRid(builder: flatbuffers.Builder, rid: number) {
    builder.addFieldInt32(0, rid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number how
   */
  static addHow(builder: flatbuffers.Builder, how: number) {
    builder.addFieldInt32(1, how, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endShutdown(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createShutdown(
    builder: flatbuffers.Builder,
    rid: number,
    how: number
  ): flatbuffers.Offset {
    Shutdown.startShutdown(builder);
    Shutdown.addRid(builder, rid);
    Shutdown.addHow(builder, how);
    return Shutdown.endShutdown(builder);
  }
}
/**
 * @constructor
 */
export class Listen {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Listen
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Listen {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Listen= obj
   * @returns Listen
   */
  static getRootAsListen(bb: flatbuffers.ByteBuffer, obj?: Listen): Listen {
    return (obj || new Listen()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  network(): string | null;
  network(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  network(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  address(): string | null;
  address(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  address(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startListen(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset networkOffset
   */
  static addNetwork(
    builder: flatbuffers.Builder,
    networkOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, networkOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset addressOffset
   */
  static addAddress(
    builder: flatbuffers.Builder,
    addressOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(1, addressOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endListen(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createListen(
    builder: flatbuffers.Builder,
    networkOffset: flatbuffers.Offset,
    addressOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    Listen.startListen(builder);
    Listen.addNetwork(builder, networkOffset);
    Listen.addAddress(builder, addressOffset);
    return Listen.endListen(builder);
  }
}
/**
 * @constructor
 */
export class ListenRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns ListenRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): ListenRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param ListenRes= obj
   * @returns ListenRes
   */
  static getRootAsListenRes(
    bb: flatbuffers.ByteBuffer,
    obj?: ListenRes
  ): ListenRes {
    return (obj || new ListenRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  rid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_rid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startListenRes(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number rid
   */
  static addRid(builder: flatbuffers.Builder, rid: number) {
    builder.addFieldInt32(0, rid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endListenRes(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createListenRes(
    builder: flatbuffers.Builder,
    rid: number
  ): flatbuffers.Offset {
    ListenRes.startListenRes(builder);
    ListenRes.addRid(builder, rid);
    return ListenRes.endListenRes(builder);
  }
}
/**
 * @constructor
 */
export class Accept {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Accept
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Accept {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Accept= obj
   * @returns Accept
   */
  static getRootAsAccept(bb: flatbuffers.ByteBuffer, obj?: Accept): Accept {
    return (obj || new Accept()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  rid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_rid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startAccept(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number rid
   */
  static addRid(builder: flatbuffers.Builder, rid: number) {
    builder.addFieldInt32(0, rid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endAccept(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createAccept(
    builder: flatbuffers.Builder,
    rid: number
  ): flatbuffers.Offset {
    Accept.startAccept(builder);
    Accept.addRid(builder, rid);
    return Accept.endAccept(builder);
  }
}
/**
 * @constructor
 */
export class Dial {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Dial
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Dial {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Dial= obj
   * @returns Dial
   */
  static getRootAsDial(bb: flatbuffers.ByteBuffer, obj?: Dial): Dial {
    return (obj || new Dial()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  network(): string | null;
  network(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  network(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  address(): string | null;
  address(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  address(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startDial(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset networkOffset
   */
  static addNetwork(
    builder: flatbuffers.Builder,
    networkOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, networkOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset addressOffset
   */
  static addAddress(
    builder: flatbuffers.Builder,
    addressOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(1, addressOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endDial(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createDial(
    builder: flatbuffers.Builder,
    networkOffset: flatbuffers.Offset,
    addressOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    Dial.startDial(builder);
    Dial.addNetwork(builder, networkOffset);
    Dial.addAddress(builder, addressOffset);
    return Dial.endDial(builder);
  }
}
/**
 * @constructor
 */
export class NewConn {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns NewConn
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): NewConn {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param NewConn= obj
   * @returns NewConn
   */
  static getRootAsNewConn(bb: flatbuffers.ByteBuffer, obj?: NewConn): NewConn {
    return (obj || new NewConn()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  rid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_rid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  remoteAddr(): string | null;
  remoteAddr(
    optionalEncoding: flatbuffers.Encoding
  ): string | Uint8Array | null;
  remoteAddr(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  localAddr(): string | null;
  localAddr(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  localAddr(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startNewConn(builder: flatbuffers.Builder) {
    builder.startObject(3);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number rid
   */
  static addRid(builder: flatbuffers.Builder, rid: number) {
    builder.addFieldInt32(0, rid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset remoteAddrOffset
   */
  static addRemoteAddr(
    builder: flatbuffers.Builder,
    remoteAddrOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(1, remoteAddrOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset localAddrOffset
   */
  static addLocalAddr(
    builder: flatbuffers.Builder,
    localAddrOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(2, localAddrOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endNewConn(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createNewConn(
    builder: flatbuffers.Builder,
    rid: number,
    remoteAddrOffset: flatbuffers.Offset,
    localAddrOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    NewConn.startNewConn(builder);
    NewConn.addRid(builder, rid);
    NewConn.addRemoteAddr(builder, remoteAddrOffset);
    NewConn.addLocalAddr(builder, localAddrOffset);
    return NewConn.endNewConn(builder);
  }
}
/**
 * @constructor
 */
export class Metrics {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Metrics
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Metrics {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Metrics= obj
   * @returns Metrics
   */
  static getRootAsMetrics(bb: flatbuffers.ByteBuffer, obj?: Metrics): Metrics {
    return (obj || new Metrics()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startMetrics(builder: flatbuffers.Builder) {
    builder.startObject(0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endMetrics(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createMetrics(builder: flatbuffers.Builder): flatbuffers.Offset {
    Metrics.startMetrics(builder);
    return Metrics.endMetrics(builder);
  }
}
/**
 * @constructor
 */
export class MetricsRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns MetricsRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): MetricsRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param MetricsRes= obj
   * @returns MetricsRes
   */
  static getRootAsMetricsRes(
    bb: flatbuffers.ByteBuffer,
    obj?: MetricsRes
  ): MetricsRes {
    return (obj || new MetricsRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns flatbuffers.Long
   */
  opsDispatched(): flatbuffers.Long {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.readUint64(this.bb_pos + offset)
      : this.bb!.createLong(0, 0);
  }

  /**
   * @param flatbuffers.Long value
   * @returns boolean
   */
  mutate_ops_dispatched(value: flatbuffers.Long): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint64(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns flatbuffers.Long
   */
  opsCompleted(): flatbuffers.Long {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? this.bb!.readUint64(this.bb_pos + offset)
      : this.bb!.createLong(0, 0);
  }

  /**
   * @param flatbuffers.Long value
   * @returns boolean
   */
  mutate_ops_completed(value: flatbuffers.Long): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint64(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns flatbuffers.Long
   */
  bytesSentControl(): flatbuffers.Long {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset
      ? this.bb!.readUint64(this.bb_pos + offset)
      : this.bb!.createLong(0, 0);
  }

  /**
   * @param flatbuffers.Long value
   * @returns boolean
   */
  mutate_bytes_sent_control(value: flatbuffers.Long): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 8);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint64(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns flatbuffers.Long
   */
  bytesSentData(): flatbuffers.Long {
    var offset = this.bb!.__offset(this.bb_pos, 10);
    return offset
      ? this.bb!.readUint64(this.bb_pos + offset)
      : this.bb!.createLong(0, 0);
  }

  /**
   * @param flatbuffers.Long value
   * @returns boolean
   */
  mutate_bytes_sent_data(value: flatbuffers.Long): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 10);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint64(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns flatbuffers.Long
   */
  bytesReceived(): flatbuffers.Long {
    var offset = this.bb!.__offset(this.bb_pos, 12);
    return offset
      ? this.bb!.readUint64(this.bb_pos + offset)
      : this.bb!.createLong(0, 0);
  }

  /**
   * @param flatbuffers.Long value
   * @returns boolean
   */
  mutate_bytes_received(value: flatbuffers.Long): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 12);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint64(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startMetricsRes(builder: flatbuffers.Builder) {
    builder.startObject(5);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Long opsDispatched
   */
  static addOpsDispatched(
    builder: flatbuffers.Builder,
    opsDispatched: flatbuffers.Long
  ) {
    builder.addFieldInt64(0, opsDispatched, builder.createLong(0, 0));
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Long opsCompleted
   */
  static addOpsCompleted(
    builder: flatbuffers.Builder,
    opsCompleted: flatbuffers.Long
  ) {
    builder.addFieldInt64(1, opsCompleted, builder.createLong(0, 0));
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Long bytesSentControl
   */
  static addBytesSentControl(
    builder: flatbuffers.Builder,
    bytesSentControl: flatbuffers.Long
  ) {
    builder.addFieldInt64(2, bytesSentControl, builder.createLong(0, 0));
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Long bytesSentData
   */
  static addBytesSentData(
    builder: flatbuffers.Builder,
    bytesSentData: flatbuffers.Long
  ) {
    builder.addFieldInt64(3, bytesSentData, builder.createLong(0, 0));
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Long bytesReceived
   */
  static addBytesReceived(
    builder: flatbuffers.Builder,
    bytesReceived: flatbuffers.Long
  ) {
    builder.addFieldInt64(4, bytesReceived, builder.createLong(0, 0));
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endMetricsRes(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createMetricsRes(
    builder: flatbuffers.Builder,
    opsDispatched: flatbuffers.Long,
    opsCompleted: flatbuffers.Long,
    bytesSentControl: flatbuffers.Long,
    bytesSentData: flatbuffers.Long,
    bytesReceived: flatbuffers.Long
  ): flatbuffers.Offset {
    MetricsRes.startMetricsRes(builder);
    MetricsRes.addOpsDispatched(builder, opsDispatched);
    MetricsRes.addOpsCompleted(builder, opsCompleted);
    MetricsRes.addBytesSentControl(builder, bytesSentControl);
    MetricsRes.addBytesSentData(builder, bytesSentData);
    MetricsRes.addBytesReceived(builder, bytesReceived);
    return MetricsRes.endMetricsRes(builder);
  }
}
/**
 * @constructor
 */
export class Run {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Run
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Run {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Run= obj
   * @returns Run
   */
  static getRootAsRun(bb: flatbuffers.ByteBuffer, obj?: Run): Run {
    return (obj || new Run()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param number index
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array
   */
  args(index: number): string;
  args(
    index: number,
    optionalEncoding: flatbuffers.Encoding
  ): string | Uint8Array;
  args(index: number, optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(
          this.bb!.__vector(this.bb_pos + offset) + index * 4,
          optionalEncoding
        )
      : null;
  }

  /**
   * @returns number
   */
  argsLength(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  cwd(): string | null;
  cwd(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  cwd(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param number index
   * @param KeyValue= obj
   * @returns KeyValue
   */
  env(index: number, obj?: KeyValue): KeyValue | null {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset
      ? (obj || new KeyValue()).__init(
          this.bb!.__indirect(
            this.bb!.__vector(this.bb_pos + offset) + index * 4
          ),
          this.bb!
        )
      : null;
  }

  /**
   * @returns number
   */
  envLength(): number {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  /**
   * @returns ProcessStdio
   */
  stdin(): ProcessStdio {
    var offset = this.bb!.__offset(this.bb_pos, 10);
    return offset
      ? /**  */ this.bb!.readInt8(this.bb_pos + offset)
      : ProcessStdio.Inherit;
  }

  /**
   * @param ProcessStdio value
   * @returns boolean
   */
  mutate_stdin(value: ProcessStdio): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 10);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns ProcessStdio
   */
  stdout(): ProcessStdio {
    var offset = this.bb!.__offset(this.bb_pos, 12);
    return offset
      ? /**  */ this.bb!.readInt8(this.bb_pos + offset)
      : ProcessStdio.Inherit;
  }

  /**
   * @param ProcessStdio value
   * @returns boolean
   */
  mutate_stdout(value: ProcessStdio): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 12);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns ProcessStdio
   */
  stderr(): ProcessStdio {
    var offset = this.bb!.__offset(this.bb_pos, 14);
    return offset
      ? /**  */ this.bb!.readInt8(this.bb_pos + offset)
      : ProcessStdio.Inherit;
  }

  /**
   * @param ProcessStdio value
   * @returns boolean
   */
  mutate_stderr(value: ProcessStdio): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 14);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns number
   */
  stdinRid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 16);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_stdin_rid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 16);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns number
   */
  stdoutRid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 18);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_stdout_rid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 18);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns number
   */
  stderrRid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 20);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_stderr_rid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 20);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startRun(builder: flatbuffers.Builder) {
    builder.startObject(9);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset argsOffset
   */
  static addArgs(builder: flatbuffers.Builder, argsOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, argsOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param Array.<flatbuffers.Offset> data
   * @returns flatbuffers.Offset
   */
  static createArgsVector(
    builder: flatbuffers.Builder,
    data: flatbuffers.Offset[]
  ): flatbuffers.Offset {
    builder.startVector(4, data.length, 4);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addOffset(data[i]);
    }
    return builder.endVector();
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number numElems
   */
  static startArgsVector(builder: flatbuffers.Builder, numElems: number) {
    builder.startVector(4, numElems, 4);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset cwdOffset
   */
  static addCwd(builder: flatbuffers.Builder, cwdOffset: flatbuffers.Offset) {
    builder.addFieldOffset(1, cwdOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset envOffset
   */
  static addEnv(builder: flatbuffers.Builder, envOffset: flatbuffers.Offset) {
    builder.addFieldOffset(2, envOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param Array.<flatbuffers.Offset> data
   * @returns flatbuffers.Offset
   */
  static createEnvVector(
    builder: flatbuffers.Builder,
    data: flatbuffers.Offset[]
  ): flatbuffers.Offset {
    builder.startVector(4, data.length, 4);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addOffset(data[i]);
    }
    return builder.endVector();
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number numElems
   */
  static startEnvVector(builder: flatbuffers.Builder, numElems: number) {
    builder.startVector(4, numElems, 4);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param ProcessStdio stdin
   */
  static addStdin(builder: flatbuffers.Builder, stdin: ProcessStdio) {
    builder.addFieldInt8(3, stdin, ProcessStdio.Inherit);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param ProcessStdio stdout
   */
  static addStdout(builder: flatbuffers.Builder, stdout: ProcessStdio) {
    builder.addFieldInt8(4, stdout, ProcessStdio.Inherit);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param ProcessStdio stderr
   */
  static addStderr(builder: flatbuffers.Builder, stderr: ProcessStdio) {
    builder.addFieldInt8(5, stderr, ProcessStdio.Inherit);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number stdinRid
   */
  static addStdinRid(builder: flatbuffers.Builder, stdinRid: number) {
    builder.addFieldInt32(6, stdinRid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number stdoutRid
   */
  static addStdoutRid(builder: flatbuffers.Builder, stdoutRid: number) {
    builder.addFieldInt32(7, stdoutRid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number stderrRid
   */
  static addStderrRid(builder: flatbuffers.Builder, stderrRid: number) {
    builder.addFieldInt32(8, stderrRid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endRun(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createRun(
    builder: flatbuffers.Builder,
    argsOffset: flatbuffers.Offset,
    cwdOffset: flatbuffers.Offset,
    envOffset: flatbuffers.Offset,
    stdin: ProcessStdio,
    stdout: ProcessStdio,
    stderr: ProcessStdio,
    stdinRid: number,
    stdoutRid: number,
    stderrRid: number
  ): flatbuffers.Offset {
    Run.startRun(builder);
    Run.addArgs(builder, argsOffset);
    Run.addCwd(builder, cwdOffset);
    Run.addEnv(builder, envOffset);
    Run.addStdin(builder, stdin);
    Run.addStdout(builder, stdout);
    Run.addStderr(builder, stderr);
    Run.addStdinRid(builder, stdinRid);
    Run.addStdoutRid(builder, stdoutRid);
    Run.addStderrRid(builder, stderrRid);
    return Run.endRun(builder);
  }
}
/**
 * @constructor
 */
export class RunRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns RunRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): RunRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param RunRes= obj
   * @returns RunRes
   */
  static getRootAsRunRes(bb: flatbuffers.ByteBuffer, obj?: RunRes): RunRes {
    return (obj || new RunRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  rid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_rid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns number
   */
  pid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_pid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns number
   */
  stdinRid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_stdin_rid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 8);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns number
   */
  stdoutRid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 10);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_stdout_rid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 10);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns number
   */
  stderrRid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 12);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_stderr_rid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 12);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startRunRes(builder: flatbuffers.Builder) {
    builder.startObject(5);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number rid
   */
  static addRid(builder: flatbuffers.Builder, rid: number) {
    builder.addFieldInt32(0, rid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number pid
   */
  static addPid(builder: flatbuffers.Builder, pid: number) {
    builder.addFieldInt32(1, pid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number stdinRid
   */
  static addStdinRid(builder: flatbuffers.Builder, stdinRid: number) {
    builder.addFieldInt32(2, stdinRid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number stdoutRid
   */
  static addStdoutRid(builder: flatbuffers.Builder, stdoutRid: number) {
    builder.addFieldInt32(3, stdoutRid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number stderrRid
   */
  static addStderrRid(builder: flatbuffers.Builder, stderrRid: number) {
    builder.addFieldInt32(4, stderrRid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endRunRes(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createRunRes(
    builder: flatbuffers.Builder,
    rid: number,
    pid: number,
    stdinRid: number,
    stdoutRid: number,
    stderrRid: number
  ): flatbuffers.Offset {
    RunRes.startRunRes(builder);
    RunRes.addRid(builder, rid);
    RunRes.addPid(builder, pid);
    RunRes.addStdinRid(builder, stdinRid);
    RunRes.addStdoutRid(builder, stdoutRid);
    RunRes.addStderrRid(builder, stderrRid);
    return RunRes.endRunRes(builder);
  }
}
/**
 * @constructor
 */
export class RunStatus {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns RunStatus
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): RunStatus {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param RunStatus= obj
   * @returns RunStatus
   */
  static getRootAsRunStatus(
    bb: flatbuffers.ByteBuffer,
    obj?: RunStatus
  ): RunStatus {
    return (obj || new RunStatus()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  rid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_rid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startRunStatus(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number rid
   */
  static addRid(builder: flatbuffers.Builder, rid: number) {
    builder.addFieldInt32(0, rid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endRunStatus(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createRunStatus(
    builder: flatbuffers.Builder,
    rid: number
  ): flatbuffers.Offset {
    RunStatus.startRunStatus(builder);
    RunStatus.addRid(builder, rid);
    return RunStatus.endRunStatus(builder);
  }
}
/**
 * @constructor
 */
export class RunStatusRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns RunStatusRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): RunStatusRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param RunStatusRes= obj
   * @returns RunStatusRes
   */
  static getRootAsRunStatusRes(
    bb: flatbuffers.ByteBuffer,
    obj?: RunStatusRes
  ): RunStatusRes {
    return (obj || new RunStatusRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns boolean
   */
  gotSignal(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param boolean value
   * @returns boolean
   */
  mutate_got_signal(value: boolean): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, +value);
    return true;
  }

  /**
   * @returns number
   */
  exitCode(): number {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_exit_code(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns number
   */
  exitSignal(): number {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_exit_signal(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 8);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startRunStatusRes(builder: flatbuffers.Builder) {
    builder.startObject(3);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean gotSignal
   */
  static addGotSignal(builder: flatbuffers.Builder, gotSignal: boolean) {
    builder.addFieldInt8(0, +gotSignal, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number exitCode
   */
  static addExitCode(builder: flatbuffers.Builder, exitCode: number) {
    builder.addFieldInt32(1, exitCode, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number exitSignal
   */
  static addExitSignal(builder: flatbuffers.Builder, exitSignal: number) {
    builder.addFieldInt32(2, exitSignal, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endRunStatusRes(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createRunStatusRes(
    builder: flatbuffers.Builder,
    gotSignal: boolean,
    exitCode: number,
    exitSignal: number
  ): flatbuffers.Offset {
    RunStatusRes.startRunStatusRes(builder);
    RunStatusRes.addGotSignal(builder, gotSignal);
    RunStatusRes.addExitCode(builder, exitCode);
    RunStatusRes.addExitSignal(builder, exitSignal);
    return RunStatusRes.endRunStatusRes(builder);
  }
}
/**
 * @constructor
 */
export class Now {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Now
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Now {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Now= obj
   * @returns Now
   */
  static getRootAsNow(bb: flatbuffers.ByteBuffer, obj?: Now): Now {
    return (obj || new Now()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startNow(builder: flatbuffers.Builder) {
    builder.startObject(0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endNow(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createNow(builder: flatbuffers.Builder): flatbuffers.Offset {
    Now.startNow(builder);
    return Now.endNow(builder);
  }
}
/**
 * @constructor
 */
export class NowRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns NowRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): NowRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param NowRes= obj
   * @returns NowRes
   */
  static getRootAsNowRes(bb: flatbuffers.ByteBuffer, obj?: NowRes): NowRes {
    return (obj || new NowRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns flatbuffers.Long
   */
  seconds(): flatbuffers.Long {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.readUint64(this.bb_pos + offset)
      : this.bb!.createLong(0, 0);
  }

  /**
   * @param flatbuffers.Long value
   * @returns boolean
   */
  mutate_seconds(value: flatbuffers.Long): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint64(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns number
   */
  subsecNanos(): number {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_subsec_nanos(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startNowRes(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Long seconds
   */
  static addSeconds(builder: flatbuffers.Builder, seconds: flatbuffers.Long) {
    builder.addFieldInt64(0, seconds, builder.createLong(0, 0));
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number subsecNanos
   */
  static addSubsecNanos(builder: flatbuffers.Builder, subsecNanos: number) {
    builder.addFieldInt32(1, subsecNanos, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endNowRes(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createNowRes(
    builder: flatbuffers.Builder,
    seconds: flatbuffers.Long,
    subsecNanos: number
  ): flatbuffers.Offset {
    NowRes.startNowRes(builder);
    NowRes.addSeconds(builder, seconds);
    NowRes.addSubsecNanos(builder, subsecNanos);
    return NowRes.endNowRes(builder);
  }
}
/**
 * @constructor
 */
export class IsTTY {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns IsTTY
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): IsTTY {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param IsTTY= obj
   * @returns IsTTY
   */
  static getRootAsIsTTY(bb: flatbuffers.ByteBuffer, obj?: IsTTY): IsTTY {
    return (obj || new IsTTY()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startIsTTY(builder: flatbuffers.Builder) {
    builder.startObject(0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endIsTTY(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createIsTTY(builder: flatbuffers.Builder): flatbuffers.Offset {
    IsTTY.startIsTTY(builder);
    return IsTTY.endIsTTY(builder);
  }
}
/**
 * @constructor
 */
export class IsTTYRes {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns IsTTYRes
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): IsTTYRes {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param IsTTYRes= obj
   * @returns IsTTYRes
   */
  static getRootAsIsTTYRes(
    bb: flatbuffers.ByteBuffer,
    obj?: IsTTYRes
  ): IsTTYRes {
    return (obj || new IsTTYRes()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns boolean
   */
  stdin(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param boolean value
   * @returns boolean
   */
  mutate_stdin(value: boolean): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, +value);
    return true;
  }

  /**
   * @returns boolean
   */
  stdout(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param boolean value
   * @returns boolean
   */
  mutate_stdout(value: boolean): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, +value);
    return true;
  }

  /**
   * @returns boolean
   */
  stderr(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param boolean value
   * @returns boolean
   */
  mutate_stderr(value: boolean): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 8);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt8(this.bb_pos + offset, +value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startIsTTYRes(builder: flatbuffers.Builder) {
    builder.startObject(3);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean stdin
   */
  static addStdin(builder: flatbuffers.Builder, stdin: boolean) {
    builder.addFieldInt8(0, +stdin, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean stdout
   */
  static addStdout(builder: flatbuffers.Builder, stdout: boolean) {
    builder.addFieldInt8(1, +stdout, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean stderr
   */
  static addStderr(builder: flatbuffers.Builder, stderr: boolean) {
    builder.addFieldInt8(2, +stderr, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endIsTTYRes(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createIsTTYRes(
    builder: flatbuffers.Builder,
    stdin: boolean,
    stdout: boolean,
    stderr: boolean
  ): flatbuffers.Offset {
    IsTTYRes.startIsTTYRes(builder);
    IsTTYRes.addStdin(builder, stdin);
    IsTTYRes.addStdout(builder, stdout);
    IsTTYRes.addStderr(builder, stderr);
    return IsTTYRes.endIsTTYRes(builder);
  }
}
/**
 * @constructor
 */
export class Seek {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Seek
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Seek {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Seek= obj
   * @returns Seek
   */
  static getRootAsSeek(bb: flatbuffers.ByteBuffer, obj?: Seek): Seek {
    return (obj || new Seek()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  rid(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_rid(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns number
   */
  offset(): number {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_offset(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 6);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeInt32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @returns number
   */
  whence(): number {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number value
   * @returns boolean
   */
  mutate_whence(value: number): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 8);

    if (offset === 0) {
      return false;
    }

    this.bb!.writeUint32(this.bb_pos + offset, value);
    return true;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startSeek(builder: flatbuffers.Builder) {
    builder.startObject(3);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number rid
   */
  static addRid(builder: flatbuffers.Builder, rid: number) {
    builder.addFieldInt32(0, rid, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number offset
   */
  static addOffset(builder: flatbuffers.Builder, offset: number) {
    builder.addFieldInt32(1, offset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number whence
   */
  static addWhence(builder: flatbuffers.Builder, whence: number) {
    builder.addFieldInt32(2, whence, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endSeek(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createSeek(
    builder: flatbuffers.Builder,
    rid: number,
    offset: number,
    whence: number
  ): flatbuffers.Offset {
    Seek.startSeek(builder);
    Seek.addRid(builder, rid);
    Seek.addOffset(builder, offset);
    Seek.addWhence(builder, whence);
    return Seek.endSeek(builder);
  }
}
/**
 * @constructor
 */
export class GetRandomValues {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns GetRandomValues
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): GetRandomValues {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param GetRandomValues= obj
   * @returns GetRandomValues
   */
  static getRootAsGetRandomValues(
    bb: flatbuffers.ByteBuffer,
    obj?: GetRandomValues
  ): GetRandomValues {
    return (obj || new GetRandomValues()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startGetRandomValues(builder: flatbuffers.Builder) {
    builder.startObject(0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endGetRandomValues(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  static createGetRandomValues(
    builder: flatbuffers.Builder
  ): flatbuffers.Offset {
    GetRandomValues.startGetRandomValues(builder);
    return GetRandomValues.endGetRandomValues(builder);
  }
}
